(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('angular')) :
    typeof define === 'function' && define.amd ? define(['angular'], factory) :
    (global.ayMenuButton = factory(global.angular));
}(this, (function (angular) { 'use strict';

/*! Copyright 2016 Ayogo Health Inc. */
var MenuManager = (function () {
    function MenuManager() {
    }
    Object.defineProperty(MenuManager, "open", {
        get: function () {
            return this.isOpen;
        },
        enumerable: true,
        configurable: true
    });
    MenuManager.openMenu = function (btn, mnu, focus) {
        if (focus === void 0) { focus = false; }
        this.curButton = btn;
        this.curMenu = mnu;
        this.isOpen = true;
        this.curButton.setAttribute('aria-expanded', 'true');
        this.curButton.ownerDocument.documentElement.addEventListener('click', this.clickListener);
        this.curButton.addEventListener('blur', this.handleBlur);
        this.curButton.parentNode.insertBefore(this.curMenu, this.curButton.nextSibling);
        this.addMenuStyle();
        if (focus) {
            this.focusMenu();
        }
        this.curMenu.addEventListener('keydown', this.menuKeypressListener);
        this.curMenu.addEventListener('focusout', this.handleBlur);
        this.curMenu.addEventListener('click', this.menuClickListener);
    };
    MenuManager.closeMenu = function () {
        if (!this.isOpen || !this.curButton || !this.curMenu) {
            return;
        }
        this.curButton.ownerDocument.documentElement.removeEventListener('click', this.clickListener);
        this.curButton.removeEventListener('blur', this.handleBlur);
        this.curButton.setAttribute('aria-expanded', 'false');
        this.curMenu.removeEventListener('keydown', this.menuKeypressListener);
        this.curMenu.removeEventListener('focusout', this.handleBlur);
        this.curMenu.removeEventListener('click', this.menuClickListener);
        var oldMenu = this.curMenu;
        var handler = function () {
            oldMenu.removeAttribute('style');
            oldMenu.removeEventListener('transitionend', handler);
            oldMenu.removeEventListener('webkittransitionend', handler);
        };
        if ('transitionDuration' in oldMenu.style) {
            oldMenu.style.transitionDuration = '192ms';
        }
        else {
            oldMenu.style.webkitTransitionDuration = '192ms';
        }
        if ('transform' in oldMenu.style) {
            oldMenu.style.transform = 'scaleY(0)';
        }
        else {
            oldMenu.style.webkitTransform = 'scaleY(0)';
        }
        oldMenu.addEventListener('transitionend', handler);
        oldMenu.addEventListener('webkittransitionend', handler);
        this.isOpen = false;
        this.curButton = null;
        this.curMenu = null;
        this.focusCount = null;
    };
    MenuManager.toggleMenu = function (btn, mnu) {
        var openMnu = this.curMenu;
        if (this.isOpen && btn === this.curButton) {
            this.closeMenu();
        }
        if (openMnu !== mnu) {
            this.openMenu(btn, mnu);
        }
    };
    MenuManager.focusMenu = function () {
        if (!this.curMenu) {
            return;
        }
        if (this.focusCount === null) {
            this.focusCount = 0;
        }
        var length = this.curMenu.children.length;
        if (this.focusCount < 0) {
            this.focusCount += length;
        }
        var mi = this.curMenu.children[this.focusCount % length];
        mi.focus();
    };
    MenuManager.clickMenuItem = function () {
        if (!this.curMenu) {
            return;
        }
        var length = this.curMenu.children.length;
        var mi = this.curMenu.children[this.focusCount % length];
        if (!mi.hasAttribute('disabled')) {
            mi.click();
        }
    };
    MenuManager.addMenuStyle = function () {
        if (!this.curMenu || !this.curButton) {
            return;
        }
        var menu = this.curMenu;
        var btn = this.curButton;
        menu.style.display = 'block';
        menu.style.position = 'fixed';
        menu.setAttribute('role', 'menu');
        menu.setAttribute('data-owner', 'button');
        menu.setAttribute('type', '');
        for (var i = 0; i < menu.children.length; i++) {
            menu.children[i].setAttribute('tabindex', '-1');
            menu.children[i].setAttribute('role', 'menuitem');
            menu.children[i].setAttribute('aria-disabled', menu.children[i].hasAttribute('disabled').toString());
        }
        requestAnimationFrame(function () {
            var btnSize = btn.getBoundingClientRect();
            var menuSize = menu.getBoundingClientRect();
            var wndHeight = window.innerHeight;
            if (btnSize.bottom + menuSize.height > wndHeight) {
                menu.style.bottom = btnSize.top + 'px';
            }
            else {
                menu.style.top = btnSize.bottom + 'px';
            }
            if (menuSize.width > btnSize.right) {
                menu.style.left = btnSize.left + 'px';
            }
            else {
                menu.style.left = (btnSize.right - menuSize.width) + 'px';
            }
            if ('transform' in menu.style) {
                menu.style.transform = 'scaleY(1)';
            }
            else {
                menu.style.webkitTransform = 'scaleY(1)';
            }
        });
    };
    MenuManager.clickListener = function (e) {
        if (!MenuManager.curButton || !MenuManager.curMenu) {
            return;
        }
        if (MenuManager.curMenu.contains(e.target)) {
            return;
        }
        if (MenuManager.curButton.contains(e.target)) {
            return;
        }
        MenuManager.closeMenu();
    };
    MenuManager.menuClickListener = function (e) {
        if (!MenuManager.curButton || !MenuManager.curMenu) {
            return;
        }
        var mi = e.target;
        if (!MenuManager.curMenu.contains(mi)) {
            return;
        }
        if (mi.hasAttribute('disabled')) {
            return;
        }
        MenuManager.closeMenu();
    };
    MenuManager.handleBlur = function (e) {
        if (!MenuManager.curButton) {
            return;
        }
        var activeEl = e.relatedTarget;
        if (!activeEl) {
            return;
        }
        if (MenuManager.curButton === activeEl) {
            return;
        }
        if (MenuManager.curMenu && MenuManager.curMenu.contains(activeEl)) {
            return;
        }
        setTimeout(function () {
            if (MenuManager.isOpen) {
                MenuManager.closeMenu();
            }
        }, 0);
    };
    MenuManager.menuKeypressListener = function (e) {
        if (!MenuManager.isOpen) {
            return;
        }
        if (e.keyCode === 27) {
            MenuManager.closeMenu();
        }
        if (e.keyCode === 38) {
            MenuManager.focusCount--;
            MenuManager.focusMenu();
        }
        if (e.keyCode === 40) {
            MenuManager.focusCount++;
            MenuManager.focusMenu();
        }
        if (e.keyCode === 32 || e.keyCode === 13) {
            MenuManager.clickMenuItem();
        }
    };
    return MenuManager;
}());
MenuManager.curMenu = null;
MenuManager.curButton = null;
MenuManager.isOpen = false;
MenuManager.focusCount = null;

/*! Copyright 2016 Ayogo Health Inc. */
var MenuButtonBehaviour = (function () {
    function MenuButtonBehaviour(btn) {
        var _this = this;
        this.el = btn;
        var menuID = this.el.getAttribute('menu');
        if (!menuID) {
            return;
        }
        var menu = btn.ownerDocument.getElementById(menuID);
        if (!menu) {
            return;
        }
        this.menu = menu;
        this.el.setAttribute('aria-haspopup', 'true');
        this.el.setAttribute('aria-expanded', 'false');
        this.clickHandler = function () {
            MenuManager.toggleMenu(_this.el, _this.menu);
        };
        this.keyHandler = function (e) {
            _this.buttonKeypressListener(e);
        };
        this.el.addEventListener('click', this.clickHandler);
        this.el.addEventListener('keydown', this.keyHandler);
    }
    MenuButtonBehaviour.prototype.destroy = function () {
        if (this.el) {
            this.el.removeEventListener('click', this.clickHandler);
            this.el.removeEventListener('keydown', this.keyHandler);
        }
        this.clickHandler = null;
        this.keyHandler = null;
        this.menu = null;
        this.el = null;
    };
    MenuButtonBehaviour.prototype.buttonKeypressListener = function (e) {
        if (MenuManager.open && e.keyCode == 27) {
            MenuManager.closeMenu();
        }
        if (e.keyCode == 40) {
            if (!MenuManager.open) {
                MenuManager.openMenu(this.el, this.menu, true);
            }
            else {
                MenuManager.focusMenu();
            }
        }
    };
    return MenuButtonBehaviour;
}());

/*! Copyright 2016 Ayogo Health Inc. */
var MENU_STYLES = "\nmenu[type=\"context\"],\nmenu[data-owner=\"button\"] {\n    display: none;\n    padding: 0;\n    margin: 0;\n    border: 1px solid;\n    will-change: transform;\n    transform: scaleY(0);\n    transform-origin: top center;\n    transition: transform 225ms cubic-bezier(0.4, 0.0, 0.2, 1);\n}\n\nmenuitem {\n    display: list-item;\n    list-style-type: none;\n    background: Menu;\n    font: menu;\n    padding: 0.25em 0.5em;\n    cursor: default;\n}\n\nmenuitem::after {\n    content: attr(label);\n}\n\nmenuitem[disabled] {\n    color: GrayText;\n}\n\nmenuitem:not([disabled]):hover,\nmenuitem:not([disabled]):focus {\n    background: Highlight;\n    color: HighlightText;\n}\n\nbutton[type=\"menu\"]::after,\nbutton[data-type=\"menu\"]:after { content: ' \u25BE'; }\n\nbutton[type=\"menu\"]:empty::after,\nbutton[data-type=\"menu\"]:empty:after { content: '\u25BE'; } /* No space character */\n";
var PREFIX_STYLES = "\nmenu[type=\"context\"],\nmenu[data-owner=\"button\"] {\n    -webkit-transform: scaleY(0);\n    -webkit-transform-origin: top center;\n    -webkit-transition: -webkit-transform 225ms cubic-bezier(0.4, 0.0, 0.2, 1);\n    transition: -webkit-transform 225ms cubic-bezier(0.4, 0.0, 0.2, 1);\n}\n";
var mnuStyle = document.createElement('style');
mnuStyle.appendChild(document.createTextNode(MENU_STYLES));
if (!('transform' in document.createElement('div').style)) {
    mnuStyle.appendChild(document.createTextNode(PREFIX_STYLES));
}
var insertPoint;
if (insertPoint = document.querySelector('link')) {
    insertPoint.parentNode.insertBefore(mnuStyle, insertPoint);
}
else if (insertPoint = document.querySelector('style')) {
    insertPoint.parentNode.insertBefore(mnuStyle, insertPoint);
}
else if (insertPoint = document.querySelector('head')) {
    insertPoint.appendChild(mnuStyle);
}
else {
    document.appendChild(mnuStyle);
}
var gcCache = null;
if ('WeakMap' in window) {
    gcCache = new WeakMap();
}
function MenuButton(el) {
    var behaviour = new MenuButtonBehaviour(el);
    if (gcCache) {
        gcCache.set(el, behaviour);
    }
    return behaviour;
}

/*! Copyright 2016 Ayogo Health Inc. */
var modName = 'ayMenuButton';
angular.module(modName)
    .directive('button', function () {
    return {
        restrict: 'E',
        link: function (_$scope, $element) {
            var el = $element[0];
            if (el.getAttribute('type') === 'menu' || el.getAttribute('data-type') === 'menu') {
                var behaviour_1 = MenuButton(el);
                $element.on('$destroy', function () {
                    behaviour_1.destroy();
                });
            }
        }
    };
});

return modName;

})));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhcjEuanMiLCJzb3VyY2VzIjpbIi4uL2Rpc3QtZXM1L21hbmFnZXIuanMiLCIuLi9kaXN0LWVzNS9idXR0b24uanMiLCIuLi9kaXN0LWVzNS9pbmRleC5qcyIsIi4uL2Rpc3QtZXM1L2FuZ3VsYXIxLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBDb3B5cmlnaHQgMjAxNiBBeW9nbyBIZWFsdGggSW5jLiAqL1xuZXhwb3J0IHZhciBNZW51TWFuYWdlciA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTWVudU1hbmFnZXIoKSB7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShNZW51TWFuYWdlciwgXCJvcGVuXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5pc09wZW47XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE1lbnVNYW5hZ2VyLm9wZW5NZW51ID0gZnVuY3Rpb24gKGJ0biwgbW51LCBmb2N1cykge1xuICAgICAgICBpZiAoZm9jdXMgPT09IHZvaWQgMCkgeyBmb2N1cyA9IGZhbHNlOyB9XG4gICAgICAgIHRoaXMuY3VyQnV0dG9uID0gYnRuO1xuICAgICAgICB0aGlzLmN1ck1lbnUgPSBtbnU7XG4gICAgICAgIHRoaXMuaXNPcGVuID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5jdXJCdXR0b24uc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgJ3RydWUnKTtcbiAgICAgICAgdGhpcy5jdXJCdXR0b24ub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmNsaWNrTGlzdGVuZXIpO1xuICAgICAgICB0aGlzLmN1ckJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdibHVyJywgdGhpcy5oYW5kbGVCbHVyKTtcbiAgICAgICAgdGhpcy5jdXJCdXR0b24ucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodGhpcy5jdXJNZW51LCB0aGlzLmN1ckJ1dHRvbi5uZXh0U2libGluZyk7XG4gICAgICAgIHRoaXMuYWRkTWVudVN0eWxlKCk7XG4gICAgICAgIGlmIChmb2N1cykge1xuICAgICAgICAgICAgdGhpcy5mb2N1c01lbnUoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmN1ck1lbnUuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMubWVudUtleXByZXNzTGlzdGVuZXIpO1xuICAgICAgICB0aGlzLmN1ck1lbnUuYWRkRXZlbnRMaXN0ZW5lcignZm9jdXNvdXQnLCB0aGlzLmhhbmRsZUJsdXIpO1xuICAgICAgICB0aGlzLmN1ck1lbnUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLm1lbnVDbGlja0xpc3RlbmVyKTtcbiAgICB9O1xuICAgIE1lbnVNYW5hZ2VyLmNsb3NlTWVudSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzT3BlbiB8fCAhdGhpcy5jdXJCdXR0b24gfHwgIXRoaXMuY3VyTWVudSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY3VyQnV0dG9uLm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5jbGlja0xpc3RlbmVyKTtcbiAgICAgICAgdGhpcy5jdXJCdXR0b24ucmVtb3ZlRXZlbnRMaXN0ZW5lcignYmx1cicsIHRoaXMuaGFuZGxlQmx1cik7XG4gICAgICAgIHRoaXMuY3VyQnV0dG9uLnNldEF0dHJpYnV0ZSgnYXJpYS1leHBhbmRlZCcsICdmYWxzZScpO1xuICAgICAgICB0aGlzLmN1ck1lbnUucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMubWVudUtleXByZXNzTGlzdGVuZXIpO1xuICAgICAgICB0aGlzLmN1ck1lbnUucmVtb3ZlRXZlbnRMaXN0ZW5lcignZm9jdXNvdXQnLCB0aGlzLmhhbmRsZUJsdXIpO1xuICAgICAgICB0aGlzLmN1ck1lbnUucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLm1lbnVDbGlja0xpc3RlbmVyKTtcbiAgICAgICAgdmFyIG9sZE1lbnUgPSB0aGlzLmN1ck1lbnU7XG4gICAgICAgIHZhciBoYW5kbGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgb2xkTWVudS5yZW1vdmVBdHRyaWJ1dGUoJ3N0eWxlJyk7XG4gICAgICAgICAgICBvbGRNZW51LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCBoYW5kbGVyKTtcbiAgICAgICAgICAgIG9sZE1lbnUucmVtb3ZlRXZlbnRMaXN0ZW5lcignd2Via2l0dHJhbnNpdGlvbmVuZCcsIGhhbmRsZXIpO1xuICAgICAgICB9O1xuICAgICAgICBpZiAoJ3RyYW5zaXRpb25EdXJhdGlvbicgaW4gb2xkTWVudS5zdHlsZSkge1xuICAgICAgICAgICAgb2xkTWVudS5zdHlsZS50cmFuc2l0aW9uRHVyYXRpb24gPSAnMTkybXMnO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgb2xkTWVudS5zdHlsZS53ZWJraXRUcmFuc2l0aW9uRHVyYXRpb24gPSAnMTkybXMnO1xuICAgICAgICB9XG4gICAgICAgIGlmICgndHJhbnNmb3JtJyBpbiBvbGRNZW51LnN0eWxlKSB7XG4gICAgICAgICAgICBvbGRNZW51LnN0eWxlLnRyYW5zZm9ybSA9ICdzY2FsZVkoMCknO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgb2xkTWVudS5zdHlsZS53ZWJraXRUcmFuc2Zvcm0gPSAnc2NhbGVZKDApJztcbiAgICAgICAgfVxuICAgICAgICBvbGRNZW51LmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCBoYW5kbGVyKTtcbiAgICAgICAgb2xkTWVudS5hZGRFdmVudExpc3RlbmVyKCd3ZWJraXR0cmFuc2l0aW9uZW5kJywgaGFuZGxlcik7XG4gICAgICAgIHRoaXMuaXNPcGVuID0gZmFsc2U7XG4gICAgICAgIHRoaXMuY3VyQnV0dG9uID0gbnVsbDtcbiAgICAgICAgdGhpcy5jdXJNZW51ID0gbnVsbDtcbiAgICAgICAgdGhpcy5mb2N1c0NvdW50ID0gbnVsbDtcbiAgICB9O1xuICAgIE1lbnVNYW5hZ2VyLnRvZ2dsZU1lbnUgPSBmdW5jdGlvbiAoYnRuLCBtbnUpIHtcbiAgICAgICAgdmFyIG9wZW5NbnUgPSB0aGlzLmN1ck1lbnU7XG4gICAgICAgIGlmICh0aGlzLmlzT3BlbiAmJiBidG4gPT09IHRoaXMuY3VyQnV0dG9uKSB7XG4gICAgICAgICAgICB0aGlzLmNsb3NlTWVudSgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcGVuTW51ICE9PSBtbnUpIHtcbiAgICAgICAgICAgIHRoaXMub3Blbk1lbnUoYnRuLCBtbnUpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBNZW51TWFuYWdlci5mb2N1c01lbnUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghdGhpcy5jdXJNZW51KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuZm9jdXNDb3VudCA9PT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy5mb2N1c0NvdW50ID0gMDtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbGVuZ3RoID0gdGhpcy5jdXJNZW51LmNoaWxkcmVuLmxlbmd0aDtcbiAgICAgICAgaWYgKHRoaXMuZm9jdXNDb3VudCA8IDApIHtcbiAgICAgICAgICAgIHRoaXMuZm9jdXNDb3VudCArPSBsZW5ndGg7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIG1pID0gdGhpcy5jdXJNZW51LmNoaWxkcmVuW3RoaXMuZm9jdXNDb3VudCAlIGxlbmd0aF07XG4gICAgICAgIG1pLmZvY3VzKCk7XG4gICAgfTtcbiAgICBNZW51TWFuYWdlci5jbGlja01lbnVJdGVtID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIXRoaXMuY3VyTWVudSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciBsZW5ndGggPSB0aGlzLmN1ck1lbnUuY2hpbGRyZW4ubGVuZ3RoO1xuICAgICAgICB2YXIgbWkgPSB0aGlzLmN1ck1lbnUuY2hpbGRyZW5bdGhpcy5mb2N1c0NvdW50ICUgbGVuZ3RoXTtcbiAgICAgICAgaWYgKCFtaS5oYXNBdHRyaWJ1dGUoJ2Rpc2FibGVkJykpIHtcbiAgICAgICAgICAgIG1pLmNsaWNrKCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIE1lbnVNYW5hZ2VyLmFkZE1lbnVTdHlsZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmN1ck1lbnUgfHwgIXRoaXMuY3VyQnV0dG9uKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdmFyIG1lbnUgPSB0aGlzLmN1ck1lbnU7XG4gICAgICAgIHZhciBidG4gPSB0aGlzLmN1ckJ1dHRvbjtcbiAgICAgICAgbWVudS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICAgICAgbWVudS5zdHlsZS5wb3NpdGlvbiA9ICdmaXhlZCc7XG4gICAgICAgIG1lbnUuc2V0QXR0cmlidXRlKCdyb2xlJywgJ21lbnUnKTtcbiAgICAgICAgbWVudS5zZXRBdHRyaWJ1dGUoJ2RhdGEtb3duZXInLCAnYnV0dG9uJyk7XG4gICAgICAgIG1lbnUuc2V0QXR0cmlidXRlKCd0eXBlJywgJycpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG1lbnUuY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIG1lbnUuY2hpbGRyZW5baV0uc2V0QXR0cmlidXRlKCd0YWJpbmRleCcsICctMScpO1xuICAgICAgICAgICAgbWVudS5jaGlsZHJlbltpXS5zZXRBdHRyaWJ1dGUoJ3JvbGUnLCAnbWVudWl0ZW0nKTtcbiAgICAgICAgICAgIG1lbnUuY2hpbGRyZW5baV0uc2V0QXR0cmlidXRlKCdhcmlhLWRpc2FibGVkJywgbWVudS5jaGlsZHJlbltpXS5oYXNBdHRyaWJ1dGUoJ2Rpc2FibGVkJykudG9TdHJpbmcoKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBidG5TaXplID0gYnRuLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICAgICAgdmFyIG1lbnVTaXplID0gbWVudS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgICAgIHZhciB3bmRIZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XG4gICAgICAgICAgICBpZiAoYnRuU2l6ZS5ib3R0b20gKyBtZW51U2l6ZS5oZWlnaHQgPiB3bmRIZWlnaHQpIHtcbiAgICAgICAgICAgICAgICBtZW51LnN0eWxlLmJvdHRvbSA9IGJ0blNpemUudG9wICsgJ3B4JztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIG1lbnUuc3R5bGUudG9wID0gYnRuU2l6ZS5ib3R0b20gKyAncHgnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1lbnVTaXplLndpZHRoID4gYnRuU2l6ZS5yaWdodCkge1xuICAgICAgICAgICAgICAgIG1lbnUuc3R5bGUubGVmdCA9IGJ0blNpemUubGVmdCArICdweCc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBtZW51LnN0eWxlLmxlZnQgPSAoYnRuU2l6ZS5yaWdodCAtIG1lbnVTaXplLndpZHRoKSArICdweCc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoJ3RyYW5zZm9ybScgaW4gbWVudS5zdHlsZSkge1xuICAgICAgICAgICAgICAgIG1lbnUuc3R5bGUudHJhbnNmb3JtID0gJ3NjYWxlWSgxKSc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBtZW51LnN0eWxlLndlYmtpdFRyYW5zZm9ybSA9ICdzY2FsZVkoMSknO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuICAgIE1lbnVNYW5hZ2VyLmNsaWNrTGlzdGVuZXIgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICBpZiAoIU1lbnVNYW5hZ2VyLmN1ckJ1dHRvbiB8fCAhTWVudU1hbmFnZXIuY3VyTWVudSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChNZW51TWFuYWdlci5jdXJNZW51LmNvbnRhaW5zKGUudGFyZ2V0KSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChNZW51TWFuYWdlci5jdXJCdXR0b24uY29udGFpbnMoZS50YXJnZXQpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgTWVudU1hbmFnZXIuY2xvc2VNZW51KCk7XG4gICAgfTtcbiAgICBNZW51TWFuYWdlci5tZW51Q2xpY2tMaXN0ZW5lciA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIGlmICghTWVudU1hbmFnZXIuY3VyQnV0dG9uIHx8ICFNZW51TWFuYWdlci5jdXJNZW51KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdmFyIG1pID0gZS50YXJnZXQ7XG4gICAgICAgIGlmICghTWVudU1hbmFnZXIuY3VyTWVudS5jb250YWlucyhtaSkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAobWkuaGFzQXR0cmlidXRlKCdkaXNhYmxlZCcpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgTWVudU1hbmFnZXIuY2xvc2VNZW51KCk7XG4gICAgfTtcbiAgICBNZW51TWFuYWdlci5oYW5kbGVCbHVyID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgaWYgKCFNZW51TWFuYWdlci5jdXJCdXR0b24pIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYWN0aXZlRWwgPSBlLnJlbGF0ZWRUYXJnZXQ7XG4gICAgICAgIGlmICghYWN0aXZlRWwpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoTWVudU1hbmFnZXIuY3VyQnV0dG9uID09PSBhY3RpdmVFbCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChNZW51TWFuYWdlci5jdXJNZW51ICYmIE1lbnVNYW5hZ2VyLmN1ck1lbnUuY29udGFpbnMoYWN0aXZlRWwpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoTWVudU1hbmFnZXIuaXNPcGVuKSB7XG4gICAgICAgICAgICAgICAgTWVudU1hbmFnZXIuY2xvc2VNZW51KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIDApO1xuICAgIH07XG4gICAgTWVudU1hbmFnZXIubWVudUtleXByZXNzTGlzdGVuZXIgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICBpZiAoIU1lbnVNYW5hZ2VyLmlzT3Blbikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChlLmtleUNvZGUgPT09IDI3KSB7XG4gICAgICAgICAgICBNZW51TWFuYWdlci5jbG9zZU1lbnUoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZS5rZXlDb2RlID09PSAzOCkge1xuICAgICAgICAgICAgTWVudU1hbmFnZXIuZm9jdXNDb3VudC0tO1xuICAgICAgICAgICAgTWVudU1hbmFnZXIuZm9jdXNNZW51KCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGUua2V5Q29kZSA9PT0gNDApIHtcbiAgICAgICAgICAgIE1lbnVNYW5hZ2VyLmZvY3VzQ291bnQrKztcbiAgICAgICAgICAgIE1lbnVNYW5hZ2VyLmZvY3VzTWVudSgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChlLmtleUNvZGUgPT09IDMyIHx8IGUua2V5Q29kZSA9PT0gMTMpIHtcbiAgICAgICAgICAgIE1lbnVNYW5hZ2VyLmNsaWNrTWVudUl0ZW0oKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIE1lbnVNYW5hZ2VyO1xufSgpKTtcbk1lbnVNYW5hZ2VyLmN1ck1lbnUgPSBudWxsO1xuTWVudU1hbmFnZXIuY3VyQnV0dG9uID0gbnVsbDtcbk1lbnVNYW5hZ2VyLmlzT3BlbiA9IGZhbHNlO1xuTWVudU1hbmFnZXIuZm9jdXNDb3VudCA9IG51bGw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2liV0Z1WVdkbGNpNXFjeUlzSW5OdmRYSmpaVkp2YjNRaU9pSWlMQ0p6YjNWeVkyVnpJanBiSWk0dUwzTnlZeTl0WVc1aFoyVnlMblJ6SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQkxIVkRRVUYxUXp0QlFVVjJReXhOUVVGTk8wbEJRVTQ3U1VFMlVVRXNRMEZCUXp0SlFYUlJSeXh6UWtGQlZ5eHRRa0ZCU1R0aFFVRm1PMWxCUTBrc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTTdVVUZEZGtJc1EwRkJRenM3TzA5QlFVRTdTVUZGVFN4dlFrRkJVU3hIUVVGbUxGVkJRV2RDTEVkQlFYVkNMRVZCUVVVc1IwRkJjVUlzUlVGQlJTeExRVUYxUWp0UlFVRjJRaXh6UWtGQlFTeEZRVUZCTEdGQlFYVkNPMUZCUTI1R0xFbEJRVWtzUTBGQlF5eFRRVUZUTEVkQlFVY3NSMEZCUnl4RFFVRkRPMUZCUTNKQ0xFbEJRVWtzUTBGQlF5eFBRVUZQTEVkQlFVY3NSMEZCUnl4RFFVRkRPMUZCUTI1Q0xFbEJRVWtzUTBGQlF5eE5RVUZOTEVkQlFVY3NTVUZCU1N4RFFVRkRPMUZCUlc1Q0xFbEJRVWtzUTBGQlF5eFRRVUZUTEVOQlFVTXNXVUZCV1N4RFFVRkRMR1ZCUVdVc1JVRkJSU3hOUVVGTkxFTkJRVU1zUTBGQlF6dFJRVU55UkN4SlFVRkpMRU5CUVVNc1UwRkJVeXhEUVVGRExHRkJRV0VzUTBGQlF5eGxRVUZsTEVOQlFVTXNaMEpCUVdkQ0xFTkJRVU1zVDBGQlR5eEZRVUZGTEVsQlFVa3NRMEZCUXl4aFFVRmhMRU5CUVVNc1EwRkJRenRSUVVNelJpeEpRVUZKTEVOQlFVTXNVMEZCVXl4RFFVRkRMR2RDUVVGblFpeERRVUZETEUxQlFVMHNSVUZCUlN4SlFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExFTkJRVU03VVVGSmVrUXNTVUZCU1N4RFFVRkRMRk5CUVZNc1EwRkJReXhWUVVGVkxFTkJRVU1zV1VGQldTeERRVUZETEVsQlFVa3NRMEZCUXl4UFFVRlBMRVZCUVVVc1NVRkJTU3hEUVVGRExGTkJRVk1zUTBGQlF5eFhRVUZYTEVOQlFVTXNRMEZCUXp0UlFVVnFSaXhKUVVGSkxFTkJRVU1zV1VGQldTeEZRVUZGTEVOQlFVTTdVVUZGY0VJc1JVRkJSU3hEUVVGRExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTlNMRWxCUVVrc1EwRkJReXhUUVVGVExFVkJRVVVzUTBGQlF6dFJRVU55UWl4RFFVRkRPMUZCUlVRc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eG5Ra0ZCWjBJc1EwRkJReXhUUVVGVExFVkJRVVVzU1VGQlNTeERRVUZETEc5Q1FVRnZRaXhEUVVGRExFTkJRVU03VVVGRGNFVXNTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhuUWtGQlowSXNRMEZCUXl4VlFVRlZMRVZCUVVVc1NVRkJTU3hEUVVGRExGVkJRVlVzUTBGQlF5eERRVUZETzFGQlF6TkVMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zWjBKQlFXZENMRU5CUVVNc1QwRkJUeXhGUVVGRkxFbEJRVWtzUTBGQlF5eHBRa0ZCYVVJc1EwRkJReXhEUVVGRE8wbEJRMjVGTEVOQlFVTTdTVUZIVFN4eFFrRkJVeXhIUVVGb1FqdFJRVU5KTEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExFMUJRVTBzU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4VFFVRlRMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTnVSQ3hOUVVGTkxFTkJRVU03VVVGRFdDeERRVUZETzFGQlJVUXNTVUZCU1N4RFFVRkRMRk5CUVZNc1EwRkJReXhoUVVGaExFTkJRVU1zWlVGQlpTeERRVUZETEcxQ1FVRnRRaXhEUVVGRExFOUJRVThzUlVGQlJTeEpRVUZKTEVOQlFVTXNZVUZCWVN4RFFVRkRMRU5CUVVNN1VVRkRPVVlzU1VGQlNTeERRVUZETEZOQlFWTXNRMEZCUXl4dFFrRkJiVUlzUTBGQlF5eE5RVUZOTEVWQlFVVXNTVUZCU1N4RFFVRkRMRlZCUVZVc1EwRkJReXhEUVVGRE8xRkJRelZFTEVsQlFVa3NRMEZCUXl4VFFVRlRMRU5CUVVNc1dVRkJXU3hEUVVGRExHVkJRV1VzUlVGQlJTeFBRVUZQTEVOQlFVTXNRMEZCUXp0UlFVVjBSQ3hKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEcxQ1FVRnRRaXhEUVVGRExGTkJRVk1zUlVGQlJTeEpRVUZKTEVOQlFVTXNiMEpCUVc5Q0xFTkJRVU1zUTBGQlF6dFJRVU4yUlN4SlFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGRExHMUNRVUZ0UWl4RFFVRkRMRlZCUVZVc1JVRkJSU3hKUVVGSkxFTkJRVU1zVlVGQlZTeERRVUZETEVOQlFVTTdVVUZET1VRc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eHRRa0ZCYlVJc1EwRkJReXhQUVVGUExFVkJRVVVzU1VGQlNTeERRVUZETEdsQ1FVRnBRaXhEUVVGRExFTkJRVU03VVVGRmJFVXNTVUZCU1N4UFFVRlBMRWRCUVVjc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF6dFJRVU16UWl4SlFVRkpMRTlCUVU4c1IwRkJSenRaUVVOV0xFOUJRVThzUTBGQlF5eGxRVUZsTEVOQlFVTXNUMEZCVHl4RFFVRkRMRU5CUVVNN1dVRkRha01zVDBGQlR5eERRVUZETEcxQ1FVRnRRaXhEUVVGRExHVkJRV1VzUlVGQlJTeFBRVUZQTEVOQlFVTXNRMEZCUXp0WlFVTjBSQ3hQUVVGUExFTkJRVU1zYlVKQlFXMUNMRU5CUVVNc2NVSkJRWEZDTEVWQlFVVXNUMEZCVHl4RFFVRkRMRU5CUVVNN1VVRkRhRVVzUTBGQlF5eERRVUZETzFGQlJVWXNSVUZCUlN4RFFVRkRMRU5CUVVNc2IwSkJRVzlDTEVsQlFVa3NUMEZCVHl4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU03V1VGRGVFTXNUMEZCVHl4RFFVRkRMRXRCUVVzc1EwRkJReXhyUWtGQmEwSXNSMEZCUnl4UFFVRlBMRU5CUVVNN1VVRkRMME1zUTBGQlF6dFJRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPMWxCUTBvc1QwRkJUeXhEUVVGRExFdEJRVXNzUTBGQlF5eDNRa0ZCZDBJc1IwRkJSeXhQUVVGUExFTkJRVU03VVVGRGNrUXNRMEZCUXp0UlFVVkVMRVZCUVVVc1EwRkJReXhEUVVGRExGZEJRVmNzU1VGQlNTeFBRVUZQTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNc1EwRkJRenRaUVVNdlFpeFBRVUZQTEVOQlFVTXNTMEZCU3l4RFFVRkRMRk5CUVZNc1IwRkJSeXhYUVVGWExFTkJRVU03VVVGRE1VTXNRMEZCUXp0UlFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRE8xbEJRMG9zVDBGQlR5eERRVUZETEV0QlFVc3NRMEZCUXl4bFFVRmxMRWRCUVVjc1YwRkJWeXhEUVVGRE8xRkJRMmhFTEVOQlFVTTdVVUZGUkN4UFFVRlBMRU5CUVVNc1owSkJRV2RDTEVOQlFVTXNaVUZCWlN4RlFVRkZMRTlCUVU4c1EwRkJReXhEUVVGRE8xRkJRMjVFTEU5QlFVOHNRMEZCUXl4blFrRkJaMElzUTBGQlF5eHhRa0ZCY1VJc1JVRkJSU3hQUVVGUExFTkJRVU1zUTBGQlF6dFJRVVY2UkN4SlFVRkpMRU5CUVVNc1RVRkJUU3hIUVVGSExFdEJRVXNzUTBGQlF6dFJRVU53UWl4SlFVRkpMRU5CUVVNc1UwRkJVeXhIUVVGSExFbEJRVWtzUTBGQlF6dFJRVU4wUWl4SlFVRkpMRU5CUVVNc1QwRkJUeXhIUVVGSExFbEJRVWtzUTBGQlF6dFJRVU53UWl4SlFVRkpMRU5CUVVNc1ZVRkJWU3hIUVVGSExFbEJRVWtzUTBGQlF6dEpRVU16UWl4RFFVRkRPMGxCUjAwc2MwSkJRVlVzUjBGQmFrSXNWVUZCYTBJc1IwRkJkVUlzUlVGQlJTeEhRVUZ4UWp0UlFVTTFSQ3hKUVVGSkxFOUJRVThzUjBGQlJ5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRPMUZCUlROQ0xFVkJRVVVzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4TlFVRk5MRWxCUVVrc1IwRkJSeXhMUVVGTExFbEJRVWtzUTBGQlF5eFRRVUZUTEVOQlFVTXNRMEZCUXl4RFFVRkRPMWxCUTNoRExFbEJRVWtzUTBGQlF5eFRRVUZUTEVWQlFVVXNRMEZCUXp0UlFVTnlRaXhEUVVGRE8xRkJSVVFzUlVGQlJTeERRVUZETEVOQlFVTXNUMEZCVHl4TFFVRkxMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU03V1VGRGJFSXNTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhIUVVGSExFVkJRVVVzUjBGQlJ5eERRVUZETEVOQlFVTTdVVUZETlVJc1EwRkJRenRKUVVOTUxFTkJRVU03U1VGSFRTeHhRa0ZCVXl4SFFVRm9RanRSUVVOSkxFVkJRVVVzUTBGQlF5eERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRExFTkJRVU03V1VGRGFFSXNUVUZCVFN4RFFVRkRPMUZCUTFnc1EwRkJRenRSUVVWRUxFVkJRVVVzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4VlFVRlZMRXRCUVVzc1NVRkJTU3hEUVVGRExFTkJRVU1zUTBGQlF6dFpRVU16UWl4SlFVRkpMRU5CUVVNc1ZVRkJWU3hIUVVGSExFTkJRVU1zUTBGQlF6dFJRVU40UWl4RFFVRkRPMUZCUlVRc1NVRkJTU3hOUVVGTkxFZEJRVWNzU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4UlFVRlJMRU5CUVVNc1RVRkJUU3hEUVVGRE8xRkJSVEZETEVWQlFVVXNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhWUVVGVkxFZEJRVWNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTjBRaXhKUVVGSkxFTkJRVU1zVlVGQlZTeEpRVUZKTEUxQlFVMHNRMEZCUXp0UlFVTTVRaXhEUVVGRE8xRkJSVVFzU1VGQlNTeEZRVUZGTEVkQlFVY3NTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhSUVVGUkxFTkJRVU1zU1VGQlNTeERRVUZETEZWQlFWVXNSMEZCUnl4TlFVRk5MRU5CUVdkQ0xFTkJRVU03VVVGRGVFVXNSVUZCUlN4RFFVRkRMRXRCUVVzc1JVRkJSU3hEUVVGRE8wbEJRMllzUTBGQlF6dEpRVWRqTEhsQ1FVRmhMRWRCUVRWQ08xRkJRMGtzUlVGQlJTeERRVUZETEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU1zUTBGQlF6dFpRVU5vUWl4TlFVRk5MRU5CUVVNN1VVRkRXQ3hEUVVGRE8xRkJSVVFzU1VGQlNTeE5RVUZOTEVkQlFVY3NTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhSUVVGUkxFTkJRVU1zVFVGQlRTeERRVUZETzFGQlF6RkRMRWxCUVVrc1JVRkJSU3hIUVVGSExFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNVVUZCVVN4RFFVRkRMRWxCUVVrc1EwRkJReXhWUVVGVkxFZEJRVWNzVFVGQlRTeERRVUZuUWl4RFFVRkRPMUZCUlhoRkxFVkJRVVVzUTBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlN4RFFVRkRMRmxCUVZrc1EwRkJReXhWUVVGVkxFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdXVUZETDBJc1JVRkJSU3hEUVVGRExFdEJRVXNzUlVGQlJTeERRVUZETzFGQlEyWXNRMEZCUXp0SlFVTk1MRU5CUVVNN1NVRkhZeXgzUWtGQldTeEhRVUV6UWp0UlFVTkpMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhUUVVGVExFTkJRVU1zUTBGQlF5eERRVUZETzFsQlEyNURMRTFCUVUwc1EwRkJRenRSUVVOWUxFTkJRVU03VVVGRlJDeEpRVUZKTEVsQlFVa3NSMEZCUnl4SlFVRkpMRU5CUVVNc1QwRkJVU3hEUVVGRE8xRkJRM3BDTEVsQlFVa3NSMEZCUnl4SFFVRkhMRWxCUVVrc1EwRkJReXhUUVVGVkxFTkJRVU03VVVGSE1VSXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhQUVVGUExFZEJRVWNzVDBGQlR5eERRVUZETzFGQlF6ZENMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVVVGQlVTeEhRVUZITEU5QlFVOHNRMEZCUXp0UlFVTTVRaXhKUVVGSkxFTkJRVU1zV1VGQldTeERRVUZETEUxQlFVMHNSVUZCUlN4TlFVRk5MRU5CUVVNc1EwRkJRenRSUVVOc1F5eEpRVUZKTEVOQlFVTXNXVUZCV1N4RFFVRkRMRmxCUVZrc1JVRkJSU3hSUVVGUkxFTkJRVU1zUTBGQlF6dFJRVWN4UXl4SlFVRkpMRU5CUVVNc1dVRkJXU3hEUVVGRExFMUJRVTBzUlVGQlJTeEZRVUZGTEVOQlFVTXNRMEZCUXp0UlFVYzVRaXhIUVVGSExFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRVZCUVVVc1EwRkJReXhIUVVGSExFbEJRVWtzUTBGQlF5eFJRVUZSTEVOQlFVTXNUVUZCVFN4RlFVRkZMRU5CUVVNc1JVRkJSU3hGUVVGRkxFTkJRVU03V1VGRE5VTXNTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eFpRVUZaTEVOQlFVTXNWVUZCVlN4RlFVRkZMRWxCUVVrc1EwRkJReXhEUVVGRE8xbEJRMmhFTEVsQlFVa3NRMEZCUXl4UlFVRlJMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zV1VGQldTeERRVUZETEUxQlFVMHNSVUZCUlN4VlFVRlZMRU5CUVVNc1EwRkJRenRaUVVWc1JDeEpRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExGbEJRVmtzUTBGQlF5eGxRVUZsTEVWQlFVVXNTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eFpRVUZaTEVOQlFVTXNWVUZCVlN4RFFVRkRMRU5CUVVNc1VVRkJVU3hGUVVGRkxFTkJRVU1zUTBGQlF6dFJRVU42Unl4RFFVRkRPMUZCUlVRc2NVSkJRWEZDTEVOQlFVTTdXVUZEYkVJc1NVRkJTU3hQUVVGUExFZEJRVWNzUjBGQlJ5eERRVUZETEhGQ1FVRnhRaXhGUVVGRkxFTkJRVU03V1VGRE1VTXNTVUZCU1N4UlFVRlJMRWRCUVVjc1NVRkJTU3hEUVVGRExIRkNRVUZ4UWl4RlFVRkZMRU5CUVVNN1dVRkROVU1zU1VGQlNTeFRRVUZUTEVkQlFVY3NUVUZCVFN4RFFVRkRMRmRCUVZjc1EwRkJRenRaUVVWdVF5eEZRVUZGTEVOQlFVTXNRMEZCUXl4UFFVRlBMRU5CUVVNc1RVRkJUU3hIUVVGSExGRkJRVkVzUTBGQlF5eE5RVUZOTEVkQlFVY3NVMEZCVXl4RFFVRkRMRU5CUVVNc1EwRkJRenRuUWtGREwwTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhOUVVGTkxFZEJRVWNzVDBGQlR5eERRVUZETEVkQlFVY3NSMEZCUnl4SlFVRkpMRU5CUVVNN1dVRkRNME1zUTBGQlF6dFpRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPMmRDUVVOS0xFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNSMEZCUnl4SFFVRkhMRTlCUVU4c1EwRkJReXhOUVVGTkxFZEJRVWNzU1VGQlNTeERRVUZETzFsQlF6TkRMRU5CUVVNN1dVRkZSQ3hGUVVGRkxFTkJRVU1zUTBGQlF5eFJRVUZSTEVOQlFVTXNTMEZCU3l4SFFVRkhMRTlCUVU4c1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eERRVUZETzJkQ1FVTnFReXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEVsQlFVa3NSMEZCUnl4UFFVRlBMRU5CUVVNc1NVRkJTU3hIUVVGSExFbEJRVWtzUTBGQlF6dFpRVU14UXl4RFFVRkRPMWxCUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03WjBKQlEwb3NTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFZEJRVWNzUTBGQlF5eFBRVUZQTEVOQlFVTXNTMEZCU3l4SFFVRkhMRkZCUVZFc1EwRkJReXhMUVVGTExFTkJRVU1zUjBGQlJ5eEpRVUZKTEVOQlFVTTdXVUZET1VRc1EwRkJRenRaUVVWRUxFVkJRVVVzUTBGQlF5eERRVUZETEZkQlFWY3NTVUZCU1N4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF6dG5Ra0ZETlVJc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFRRVUZUTEVkQlFVY3NWMEZCVnl4RFFVRkRPMWxCUTNaRExFTkJRVU03V1VGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0blFrRkRTaXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEdWQlFXVXNSMEZCUnl4WFFVRlhMRU5CUVVNN1dVRkROME1zUTBGQlF6dFJRVU5NTEVOQlFVTXNRMEZCUXl4RFFVRkRPMGxCUTFBc1EwRkJRenRKUVVkakxIbENRVUZoTEVkQlFUVkNMRlZCUVRaQ0xFTkJRV003VVVGRGRrTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJReXhYUVVGWExFTkJRVU1zVTBGQlV5eEpRVUZKTEVOQlFVTXNWMEZCVnl4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRExFTkJRVU03V1VGRGFrUXNUVUZCVFN4RFFVRkRPMUZCUTFnc1EwRkJRenRSUVVWRUxFVkJRVVVzUTBGQlF5eERRVUZETEZkQlFWY3NRMEZCUXl4UFFVRlBMRU5CUVVNc1VVRkJVU3hEUVVGRExFTkJRVU1zUTBGQlF5eE5RVUZqTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1dVRkRha1FzVFVGQlRTeERRVUZETzFGQlExZ3NRMEZCUXp0UlFVVkVMRVZCUVVVc1EwRkJReXhEUVVGRExGZEJRVmNzUTBGQlF5eFRRVUZUTEVOQlFVTXNVVUZCVVN4RFFVRkRMRU5CUVVNc1EwRkJReXhOUVVGakxFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdXVUZEYmtRc1RVRkJUU3hEUVVGRE8xRkJRMWdzUTBGQlF6dFJRVVZFTEZkQlFWY3NRMEZCUXl4VFFVRlRMRVZCUVVVc1EwRkJRenRKUVVNMVFpeERRVUZETzBsQlIyTXNOa0pCUVdsQ0xFZEJRV2hETEZWQlFXbERMRU5CUVdNN1VVRkRNME1zUlVGQlJTeERRVUZETEVOQlFVTXNRMEZCUXl4WFFVRlhMRU5CUVVNc1UwRkJVeXhKUVVGSkxFTkJRVU1zVjBGQlZ5eERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRMRU5CUVVNN1dVRkRha1FzVFVGQlRTeERRVUZETzFGQlExZ3NRMEZCUXp0UlFVVkVMRWxCUVVrc1JVRkJSU3hIUVVGSExFTkJRVU1zUTBGQlF5eE5RVUZ4UWl4RFFVRkRPMUZCUldwRExFVkJRVVVzUTBGQlF5eERRVUZETEVOQlFVTXNWMEZCVnl4RFFVRkRMRTlCUVU4c1EwRkJReXhSUVVGUkxFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMWxCUTNCRExFMUJRVTBzUTBGQlF6dFJRVU5ZTEVOQlFVTTdVVUZGUkN4RlFVRkZMRU5CUVVNc1EwRkJReXhGUVVGRkxFTkJRVU1zV1VGQldTeERRVUZETEZWQlFWVXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRaUVVNNVFpeE5RVUZOTEVOQlFVTTdVVUZEV0N4RFFVRkRPMUZCUlVRc1YwRkJWeXhEUVVGRExGTkJRVk1zUlVGQlJTeERRVUZETzBsQlF6VkNMRU5CUVVNN1NVRkhZeXh6UWtGQlZTeEhRVUY2UWl4VlFVRXdRaXhEUVVGak8xRkJRM0JETEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVNc1YwRkJWeXhEUVVGRExGTkJRVk1zUTBGQlF5eERRVUZETEVOQlFVTTdXVUZEZWtJc1RVRkJUU3hEUVVGRE8xRkJRMWdzUTBGQlF6dFJRVWRFTEVsQlFVa3NVVUZCVVN4SFFVRkhMRU5CUVVNc1EwRkJReXhoUVVGdFF5eERRVUZETzFGQlJYSkVMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU1zVVVGQlVTeERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTmFMRTFCUVUwc1EwRkJRenRSUVVOWUxFTkJRVU03VVVGRlJDeEZRVUZGTEVOQlFVTXNRMEZCUXl4WFFVRlhMRU5CUVVNc1UwRkJVeXhMUVVGTExGRkJRVkVzUTBGQlF5eERRVUZETEVOQlFVTTdXVUZEY2tNc1RVRkJUU3hEUVVGRE8xRkJRMWdzUTBGQlF6dFJRVVZFTEVWQlFVVXNRMEZCUXl4RFFVRkRMRmRCUVZjc1EwRkJReXhQUVVGUExFbEJRVWtzVjBGQlZ5eERRVUZETEU5QlFVOHNRMEZCUXl4UlFVRlJMRU5CUVVNc1VVRkJVU3hEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzFsQlEyaEZMRTFCUVUwc1EwRkJRenRSUVVOWUxFTkJRVU03VVVGSFJDeFZRVUZWTEVOQlFVTTdXVUZEVUN4RlFVRkZMRU5CUVVNc1EwRkJReXhYUVVGWExFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTXNRMEZCUXp0blFrRkRja0lzVjBGQlZ5eERRVUZETEZOQlFWTXNSVUZCUlN4RFFVRkRPMWxCUXpWQ0xFTkJRVU03VVVGRFRDeERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVNN1NVRkRWaXhEUVVGRE8wbEJSMk1zWjBOQlFXOUNMRWRCUVc1RExGVkJRVzlETEVOQlFXbENPMUZCUTJwRUxFVkJRVVVzUTBGQlF5eERRVUZETEVOQlFVTXNWMEZCVnl4RFFVRkRMRTFCUVUwc1EwRkJReXhEUVVGRExFTkJRVU03V1VGRGRFSXNUVUZCVFN4RFFVRkRPMUZCUTFnc1EwRkJRenRSUVVkRUxFVkJRVVVzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4UFFVRlBMRXRCUVVzc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlF6dFpRVU51UWl4WFFVRlhMRU5CUVVNc1UwRkJVeXhGUVVGRkxFTkJRVU03VVVGRE5VSXNRMEZCUXp0UlFVZEVMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eFBRVUZQTEV0QlFVc3NSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJRenRaUVVOdVFpeFhRVUZYTEVOQlFVTXNWVUZCVlN4RlFVRkZMRU5CUVVNN1dVRkRla0lzVjBGQlZ5eERRVUZETEZOQlFWTXNSVUZCUlN4RFFVRkRPMUZCUXpWQ0xFTkJRVU03VVVGSFJDeEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1QwRkJUeXhMUVVGTExFVkJRVVVzUTBGQlF5eERRVUZETEVOQlFVTTdXVUZEYmtJc1YwRkJWeXhEUVVGRExGVkJRVlVzUlVGQlJTeERRVUZETzFsQlEzcENMRmRCUVZjc1EwRkJReXhUUVVGVExFVkJRVVVzUTBGQlF6dFJRVU0xUWl4RFFVRkRPMUZCU1VRc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEU5QlFVOHNTMEZCU3l4RlFVRkZMRWxCUVVrc1EwRkJReXhEUVVGRExFOUJRVThzUzBGQlN5eEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRPMWxCUTNaRExGZEJRVmNzUTBGQlF5eGhRVUZoTEVWQlFVVXNRMEZCUXp0UlFVTm9ReXhEUVVGRE8wbEJRMHdzUTBGQlF6dEpRVU5NTEd0Q1FVRkRPMEZCUVVRc1EwRkJReXhCUVRkUlJEdEJRVU50UWl4dFFrRkJUeXhIUVVGdlF5eEpRVUZKTEVOQlFVTTdRVUZEYUVRc2NVSkJRVk1zUjBGQmEwTXNTVUZCU1N4RFFVRkRPMEZCUTJoRUxHdENRVUZOTEVkQlFYRkRMRXRCUVVzc1EwRkJRenRCUVVOcVJDeHpRa0ZCVlN4SFFVRnBReXhKUVVGSkxFTkJRVU1pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lJdktpRWdRMjl3ZVhKcFoyaDBJREl3TVRZZ1FYbHZaMjhnU0dWaGJIUm9JRWx1WXk0Z0tpOWNibHh1Wlhod2IzSjBJR05zWVhOeklFMWxiblZOWVc1aFoyVnlJSHRjYmlBZ0lDQndjbWwyWVhSbElITjBZWFJwWXlCamRYSk5aVzUxSURvZ1NGUk5URTFsYm5WRmJHVnRaVzUwSUh3Z2JuVnNiQ0FnSUNBZ0lDQWdJRDBnYm5Wc2JEdGNiaUFnSUNCd2NtbDJZWFJsSUhOMFlYUnBZeUJqZFhKQ2RYUjBiMjRnT2lCSVZFMU1RblYwZEc5dVJXeGxiV1Z1ZENCOElHNTFiR3dnSUNBZ0lEMGdiblZzYkR0Y2JpQWdJQ0J3Y21sMllYUmxJSE4wWVhScFl5QnBjMDl3Wlc0Z09pQmliMjlzWldGdUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUQwZ1ptRnNjMlU3WEc0Z0lDQWdjSEpwZG1GMFpTQnpkR0YwYVdNZ1ptOWpkWE5EYjNWdWRDQTZJRzUxYldKbGNpQjhJRzUxYkd3Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0E5SUc1MWJHdzdYRzVjYmx4dUlDQWdJSE4wWVhScFl5Qm5aWFFnYjNCbGJpZ3BJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWFYTlBjR1Z1TzF4dUlDQWdJSDFjYmx4dUlDQWdJSE4wWVhScFl5QnZjR1Z1VFdWdWRTaGlkRzRnT2lCSVZFMU1RblYwZEc5dVJXeGxiV1Z1ZEN3Z2JXNTFJRG9nU0ZSTlRFMWxiblZGYkdWdFpXNTBMQ0JtYjJOMWN5QTZJR0p2YjJ4bFlXNGdQU0JtWVd4elpTa2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxtTjFja0oxZEhSdmJpQTlJR0owYmp0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVqZFhKTlpXNTFJRDBnYlc1MU8xeHVJQ0FnSUNBZ0lDQjBhR2x6TG1selQzQmxiaUE5SUhSeWRXVTdYRzVjYmlBZ0lDQWdJQ0FnZEdocGN5NWpkWEpDZFhSMGIyNHVjMlYwUVhSMGNtbGlkWFJsS0NkaGNtbGhMV1Y0Y0dGdVpHVmtKeXdnSjNSeWRXVW5LVHRjYmlBZ0lDQWdJQ0FnZEdocGN5NWpkWEpDZFhSMGIyNHViM2R1WlhKRWIyTjFiV1Z1ZEM1a2IyTjFiV1Z1ZEVWc1pXMWxiblF1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWduWTJ4cFkyc25MQ0IwYUdsekxtTnNhV05yVEdsemRHVnVaWElwTzF4dUlDQWdJQ0FnSUNCMGFHbHpMbU4xY2tKMWRIUnZiaTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ2RpYkhWeUp5d2dkR2hwY3k1b1lXNWtiR1ZDYkhWeUtUdGNibHh1SUNBZ0lDQWdJQ0F2THlCQ1pXWnZjbVVnZDJVZ2IzQmxiaUIwYUdVZ2JXVnVkU3dnZDJVZ2JtVmxaQ0IwYnlCdGIzWmxJR2wwSUdsdUlIUm9aU0JFVDAwZ2MyOGdkR2hoZENCcGMxeHVJQ0FnSUNBZ0lDQXZMeUJwY3lCa2FYSmxZM1JzZVNCaFpuUmxjaUIwYUdVZ1luVjBkRzl1SUdWc1pXMWxiblFnWm05eUlIUmhZaUJ2Y21SbGNtbHVaMXh1SUNBZ0lDQWdJQ0IwYUdsekxtTjFja0oxZEhSdmJpNXdZWEpsYm5ST2IyUmxMbWx1YzJWeWRFSmxabTl5WlNoMGFHbHpMbU4xY2sxbGJuVXNJSFJvYVhNdVkzVnlRblYwZEc5dUxtNWxlSFJUYVdKc2FXNW5LVHRjYmx4dUlDQWdJQ0FnSUNCMGFHbHpMbUZrWkUxbGJuVlRkSGxzWlNncE8xeHVYRzRnSUNBZ0lDQWdJR2xtSUNobWIyTjFjeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1bWIyTjFjMDFsYm5Vb0tUdGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUhSb2FYTXVZM1Z5VFdWdWRTNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDZHJaWGxrYjNkdUp5d2dkR2hwY3k1dFpXNTFTMlY1Y0hKbGMzTk1hWE4wWlc1bGNpazdYRzRnSUNBZ0lDQWdJSFJvYVhNdVkzVnlUV1Z1ZFM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NkbWIyTjFjMjkxZENjc0lIUm9hWE11YUdGdVpHeGxRbXgxY2lrN1hHNGdJQ0FnSUNBZ0lIUm9hWE11WTNWeVRXVnVkUzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ2RqYkdsamF5Y3NJSFJvYVhNdWJXVnVkVU5zYVdOclRHbHpkR1Z1WlhJcE8xeHVJQ0FnSUgxY2JseHVYRzRnSUNBZ2MzUmhkR2xqSUdOc2IzTmxUV1Z1ZFNncElIdGNiaUFnSUNBZ0lDQWdhV1lnS0NGMGFHbHpMbWx6VDNCbGJpQjhmQ0FoZEdocGN5NWpkWEpDZFhSMGIyNGdmSHdnSVhSb2FYTXVZM1Z5VFdWdWRTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdkR2hwY3k1amRYSkNkWFIwYjI0dWIzZHVaWEpFYjJOMWJXVnVkQzVrYjJOMWJXVnVkRVZzWlcxbGJuUXVjbVZ0YjNabFJYWmxiblJNYVhOMFpXNWxjaWduWTJ4cFkyc25MQ0IwYUdsekxtTnNhV05yVEdsemRHVnVaWElwTzF4dUlDQWdJQ0FnSUNCMGFHbHpMbU4xY2tKMWRIUnZiaTV5WlcxdmRtVkZkbVZ1ZEV4cGMzUmxibVZ5S0NkaWJIVnlKeXdnZEdocGN5NW9ZVzVrYkdWQ2JIVnlLVHRjYmlBZ0lDQWdJQ0FnZEdocGN5NWpkWEpDZFhSMGIyNHVjMlYwUVhSMGNtbGlkWFJsS0NkaGNtbGhMV1Y0Y0dGdVpHVmtKeXdnSjJaaGJITmxKeWs3WEc1Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVqZFhKTlpXNTFMbkpsYlc5MlpVVjJaVzUwVEdsemRHVnVaWElvSjJ0bGVXUnZkMjRuTENCMGFHbHpMbTFsYm5WTFpYbHdjbVZ6YzB4cGMzUmxibVZ5S1R0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVqZFhKTlpXNTFMbkpsYlc5MlpVVjJaVzUwVEdsemRHVnVaWElvSjJadlkzVnpiM1YwSnl3Z2RHaHBjeTVvWVc1a2JHVkNiSFZ5S1R0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVqZFhKTlpXNTFMbkpsYlc5MlpVVjJaVzUwVEdsemRHVnVaWElvSjJOc2FXTnJKeXdnZEdocGN5NXRaVzUxUTJ4cFkydE1hWE4wWlc1bGNpazdYRzVjYmlBZ0lDQWdJQ0FnYkdWMElHOXNaRTFsYm5VZ1BTQjBhR2x6TG1OMWNrMWxiblU3WEc0Z0lDQWdJQ0FnSUd4bGRDQm9ZVzVrYkdWeUlEMGdLQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYjJ4a1RXVnVkUzV5WlcxdmRtVkJkSFJ5YVdKMWRHVW9KM04wZVd4bEp5azdYRzRnSUNBZ0lDQWdJQ0FnSUNCdmJHUk5aVzUxTG5KbGJXOTJaVVYyWlc1MFRHbHpkR1Z1WlhJb0ozUnlZVzV6YVhScGIyNWxibVFuTENCb1lXNWtiR1Z5S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzlzWkUxbGJuVXVjbVZ0YjNabFJYWmxiblJNYVhOMFpXNWxjaWduZDJWaWEybDBkSEpoYm5OcGRHbHZibVZ1WkNjc0lHaGhibVJzWlhJcE8xeHVJQ0FnSUNBZ0lDQjlPMXh1WEc0Z0lDQWdJQ0FnSUdsbUlDZ25kSEpoYm5OcGRHbHZia1IxY21GMGFXOXVKeUJwYmlCdmJHUk5aVzUxTG5OMGVXeGxLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnZiR1JOWlc1MUxuTjBlV3hsTG5SeVlXNXphWFJwYjI1RWRYSmhkR2x2YmlBOUlDY3hPVEp0Y3ljN1hHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J2YkdSTlpXNTFMbk4wZVd4bExuZGxZbXRwZEZSeVlXNXphWFJwYjI1RWRYSmhkR2x2YmlBOUlDY3hPVEp0Y3ljN1hHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JwWmlBb0ozUnlZVzV6Wm05eWJTY2dhVzRnYjJ4a1RXVnVkUzV6ZEhsc1pTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2IyeGtUV1Z1ZFM1emRIbHNaUzUwY21GdWMyWnZjbTBnUFNBbmMyTmhiR1ZaS0RBcEp6dGNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUc5c1pFMWxiblV1YzNSNWJHVXVkMlZpYTJsMFZISmhibk5tYjNKdElEMGdKM05qWVd4bFdTZ3dLU2M3WEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQnZiR1JOWlc1MUxtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0ozUnlZVzV6YVhScGIyNWxibVFuTENCb1lXNWtiR1Z5S1R0Y2JpQWdJQ0FnSUNBZ2IyeGtUV1Z1ZFM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NkM1pXSnJhWFIwY21GdWMybDBhVzl1Wlc1a0p5d2dhR0Z1Wkd4bGNpazdYRzVjYmlBZ0lDQWdJQ0FnZEdocGN5NXBjMDl3Wlc0Z1BTQm1ZV3h6WlR0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVqZFhKQ2RYUjBiMjRnUFNCdWRXeHNPMXh1SUNBZ0lDQWdJQ0IwYUdsekxtTjFjazFsYm5VZ1BTQnVkV3hzTzF4dUlDQWdJQ0FnSUNCMGFHbHpMbVp2WTNWelEyOTFiblFnUFNCdWRXeHNPMXh1SUNBZ0lIMWNibHh1WEc0Z0lDQWdjM1JoZEdsaklIUnZaMmRzWlUxbGJuVW9ZblJ1SURvZ1NGUk5URUoxZEhSdmJrVnNaVzFsYm5Rc0lHMXVkU0E2SUVoVVRVeE5aVzUxUld4bGJXVnVkQ2tnZTF4dUlDQWdJQ0FnSUNCc1pYUWdiM0JsYmsxdWRTQTlJSFJvYVhNdVkzVnlUV1Z1ZFR0Y2JseHVJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NXBjMDl3Wlc0Z0ppWWdZblJ1SUQwOVBTQjBhR2x6TG1OMWNrSjFkSFJ2YmlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWpiRzl6WlUxbGJuVW9LVHRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lHbG1JQ2h2Y0dWdVRXNTFJQ0U5UFNCdGJuVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YjNCbGJrMWxiblVvWW5SdUxDQnRiblVwTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNWNiaUFnSUNCemRHRjBhV01nWm05amRYTk5aVzUxS0NrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvSVhSb2FYTXVZM1Z5VFdWdWRTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVabTlqZFhORGIzVnVkQ0E5UFQwZ2JuVnNiQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1bWIyTjFjME52ZFc1MElEMGdNRHRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lHeGxkQ0JzWlc1bmRHZ2dQU0IwYUdsekxtTjFjazFsYm5VdVkyaHBiR1J5Wlc0dWJHVnVaM1JvTzF4dVhHNGdJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtWnZZM1Z6UTI5MWJuUWdQQ0F3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtWnZZM1Z6UTI5MWJuUWdLejBnYkdWdVozUm9PMXh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2JHVjBJRzFwSUQwZ2RHaHBjeTVqZFhKTlpXNTFMbU5vYVd4a2NtVnVXM1JvYVhNdVptOWpkWE5EYjNWdWRDQWxJR3hsYm1kMGFGMGdZWE1nU0ZSTlRFVnNaVzFsYm5RN1hHNGdJQ0FnSUNBZ0lHMXBMbVp2WTNWektDazdYRzRnSUNBZ2ZWeHVYRzVjYmlBZ0lDQndjbWwyWVhSbElITjBZWFJwWXlCamJHbGphMDFsYm5WSmRHVnRLQ2tnZTF4dUlDQWdJQ0FnSUNCcFppQW9JWFJvYVhNdVkzVnlUV1Z1ZFNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2JHVjBJR3hsYm1kMGFDQTlJSFJvYVhNdVkzVnlUV1Z1ZFM1amFHbHNaSEpsYmk1c1pXNW5kR2c3WEc0Z0lDQWdJQ0FnSUd4bGRDQnRhU0E5SUhSb2FYTXVZM1Z5VFdWdWRTNWphR2xzWkhKbGJsdDBhR2x6TG1adlkzVnpRMjkxYm5RZ0pTQnNaVzVuZEdoZElHRnpJRWhVVFV4RmJHVnRaVzUwTzF4dVhHNGdJQ0FnSUNBZ0lHbG1JQ2doYldrdWFHRnpRWFIwY21saWRYUmxLQ2RrYVhOaFlteGxaQ2NwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J0YVM1amJHbGpheWdwTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNWNiaUFnSUNCd2NtbDJZWFJsSUhOMFlYUnBZeUJoWkdSTlpXNTFVM1I1YkdVb0tTQjdYRzRnSUNBZ0lDQWdJR2xtSUNnaGRHaHBjeTVqZFhKTlpXNTFJSHg4SUNGMGFHbHpMbU4xY2tKMWRIUnZiaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnYkdWMElHMWxiblVnUFNCMGFHbHpMbU4xY2sxbGJuVWhPMXh1SUNBZ0lDQWdJQ0JzWlhRZ1luUnVJRDBnZEdocGN5NWpkWEpDZFhSMGIyNGhPMXh1WEc0Z0lDQWdJQ0FnSUM4dklFRmtaQ0IwYUdVZ2JXVnVkU0IwYnlCMGFHVWdSRTlOSUdadmNpQnRaV0Z6ZFhKcGJtZGNiaUFnSUNBZ0lDQWdiV1Z1ZFM1emRIbHNaUzVrYVhOd2JHRjVJRDBnSjJKc2IyTnJKenRjYmlBZ0lDQWdJQ0FnYldWdWRTNXpkSGxzWlM1d2IzTnBkR2x2YmlBOUlDZG1hWGhsWkNjN1hHNGdJQ0FnSUNBZ0lHMWxiblV1YzJWMFFYUjBjbWxpZFhSbEtDZHliMnhsSnl3Z0oyMWxiblVuS1R0Y2JpQWdJQ0FnSUNBZ2JXVnVkUzV6WlhSQmRIUnlhV0oxZEdVb0oyUmhkR0V0YjNkdVpYSW5MQ0FuWW5WMGRHOXVKeWs3WEc1Y2JpQWdJQ0FnSUNBZ0x5OGdWSEo1SUhSdklIVnVjMlYwSUhSb1pTQjBlWEJsSUhOdklFWnBjbVZtYjNnZ1kyRnVJRzFoYTJVZ2FYUWdkbWx6YVdKc1pTQTZKeWhjYmlBZ0lDQWdJQ0FnYldWdWRTNXpaWFJCZEhSeWFXSjFkR1VvSjNSNWNHVW5MQ0FuSnlrN1hHNWNiaUFnSUNBZ0lDQWdMeThnUlc1emRYSmxJSFJvWlNCamFHbHNaSEpsYmlCaGNtVWdabTlqZFhOaFlteGxYRzRnSUNBZ0lDQWdJR1p2Y2lBb2JHVjBJR2tnUFNBd095QnBJRHdnYldWdWRTNWphR2xzWkhKbGJpNXNaVzVuZEdnN0lHa3JLeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdiV1Z1ZFM1amFHbHNaSEpsYmx0cFhTNXpaWFJCZEhSeWFXSjFkR1VvSjNSaFltbHVaR1Y0Snl3Z0p5MHhKeWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRaVzUxTG1Ob2FXeGtjbVZ1VzJsZExuTmxkRUYwZEhKcFluVjBaU2duY205c1pTY3NJQ2R0Wlc1MWFYUmxiU2NwTzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0J0Wlc1MUxtTm9hV3hrY21WdVcybGRMbk5sZEVGMGRISnBZblYwWlNnbllYSnBZUzFrYVhOaFlteGxaQ2NzSUcxbGJuVXVZMmhwYkdSeVpXNWJhVjB1YUdGelFYUjBjbWxpZFhSbEtDZGthWE5oWW14bFpDY3BMblJ2VTNSeWFXNW5LQ2twTzF4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdjbVZ4ZFdWemRFRnVhVzFoZEdsdmJrWnlZVzFsS0NncElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JpZEc1VGFYcGxJRDBnWW5SdUxtZGxkRUp2ZFc1a2FXNW5RMnhwWlc1MFVtVmpkQ2dwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdiR1YwSUcxbGJuVlRhWHBsSUQwZ2JXVnVkUzVuWlhSQ2IzVnVaR2x1WjBOc2FXVnVkRkpsWTNRb0tUdGNiaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjNibVJJWldsbmFIUWdQU0IzYVc1a2IzY3VhVzV1WlhKSVpXbG5hSFE3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoaWRHNVRhWHBsTG1KdmRIUnZiU0FySUcxbGJuVlRhWHBsTG1obGFXZG9kQ0ErSUhkdVpFaGxhV2RvZENrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMWxiblV1YzNSNWJHVXVZbTkwZEc5dElEMGdZblJ1VTJsNlpTNTBiM0FnS3lBbmNIZ25PMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFpXNTFMbk4wZVd4bExuUnZjQ0E5SUdKMGJsTnBlbVV1WW05MGRHOXRJQ3NnSjNCNEp6dGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHMWxiblZUYVhwbExuZHBaSFJvSUQ0Z1luUnVVMmw2WlM1eWFXZG9kQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxbGJuVXVjM1I1YkdVdWJHVm1kQ0E5SUdKMGJsTnBlbVV1YkdWbWRDQXJJQ2R3ZUNjN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzFsYm5VdWMzUjViR1V1YkdWbWRDQTlJQ2hpZEc1VGFYcGxMbkpwWjJoMElDMGdiV1Z1ZFZOcGVtVXVkMmxrZEdncElDc2dKM0I0Snp0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NkMGNtRnVjMlp2Y20wbklHbHVJRzFsYm5VdWMzUjViR1VwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFpXNTFMbk4wZVd4bExuUnlZVzV6Wm05eWJTQTlJQ2R6WTJGc1pWa29NU2tuTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRaVzUxTG5OMGVXeGxMbmRsWW10cGRGUnlZVzV6Wm05eWJTQTlJQ2R6WTJGc1pWa29NU2tuTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5S1R0Y2JpQWdJQ0I5WEc1Y2JseHVJQ0FnSUhCeWFYWmhkR1VnYzNSaGRHbGpJR05zYVdOclRHbHpkR1Z1WlhJb1pTQTZJRTF2ZFhObFJYWmxiblFwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLQ0ZOWlc1MVRXRnVZV2RsY2k1amRYSkNkWFIwYjI0Z2ZId2dJVTFsYm5WTllXNWhaMlZ5TG1OMWNrMWxiblVwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUdsbUlDaE5aVzUxVFdGdVlXZGxjaTVqZFhKTlpXNTFMbU52Ym5SaGFXNXpLR1V1ZEdGeVoyVjBJR0Z6SUU1dlpHVXBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JwWmlBb1RXVnVkVTFoYm1GblpYSXVZM1Z5UW5WMGRHOXVMbU52Ym5SaGFXNXpLR1V1ZEdGeVoyVjBJR0Z6SUU1dlpHVXBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JOWlc1MVRXRnVZV2RsY2k1amJHOXpaVTFsYm5Vb0tUdGNiaUFnSUNCOVhHNWNibHh1SUNBZ0lIQnlhWFpoZEdVZ2MzUmhkR2xqSUcxbGJuVkRiR2xqYTB4cGMzUmxibVZ5S0dVZ09pQk5iM1Z6WlVWMlpXNTBLU0I3WEc0Z0lDQWdJQ0FnSUdsbUlDZ2hUV1Z1ZFUxaGJtRm5aWEl1WTNWeVFuVjBkRzl1SUh4OElDRk5aVzUxVFdGdVlXZGxjaTVqZFhKTlpXNTFLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JzWlhRZ2JXa2dQU0JsTG5SaGNtZGxkQ0JoY3lCSVZFMU1SV3hsYldWdWREdGNibHh1SUNBZ0lDQWdJQ0JwWmlBb0lVMWxiblZOWVc1aFoyVnlMbU4xY2sxbGJuVXVZMjl1ZEdGcGJuTW9iV2twS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCcFppQW9iV2t1YUdGelFYUjBjbWxpZFhSbEtDZGthWE5oWW14bFpDY3BLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JOWlc1MVRXRnVZV2RsY2k1amJHOXpaVTFsYm5Vb0tUdGNiaUFnSUNCOVhHNWNibHh1SUNBZ0lIQnlhWFpoZEdVZ2MzUmhkR2xqSUdoaGJtUnNaVUpzZFhJb1pTQTZJRVp2WTNWelJYWmxiblFwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLQ0ZOWlc1MVRXRnVZV2RsY2k1amRYSkNkWFIwYjI0cElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDOHZJRVZzWlcxbGJuUWdkR2hoZENCbWIyTjFjeUJwY3lCdGIzWnBibWNnZEc5Y2JpQWdJQ0FnSUNBZ2JHVjBJR0ZqZEdsMlpVVnNJRDBnWlM1eVpXeGhkR1ZrVkdGeVoyVjBJR0Z6SUVoVVRVeEZiR1Z0Wlc1MElId2diblZzYkR0Y2JseHVJQ0FnSUNBZ0lDQnBaaUFvSVdGamRHbDJaVVZzS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCcFppQW9UV1Z1ZFUxaGJtRm5aWEl1WTNWeVFuVjBkRzl1SUQwOVBTQmhZM1JwZG1WRmJDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdhV1lnS0UxbGJuVk5ZVzVoWjJWeUxtTjFjazFsYm5VZ0ppWWdUV1Z1ZFUxaGJtRm5aWEl1WTNWeVRXVnVkUzVqYjI1MFlXbHVjeWhoWTNScGRtVkZiQ2twSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUM4dklGZGhhWFFnZFc1MGFXd2dZV1owWlhJZ1ptOWpkWE1nYUdGeklHMXZkbVZrSUdKbFptOXlaU0JqYkc5emFXNW5JSFJvWlNCdFpXNTFYRzRnSUNBZ0lDQWdJSE5sZEZScGJXVnZkWFFvS0NrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRTFsYm5WTllXNWhaMlZ5TG1selQzQmxiaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUUxbGJuVk5ZVzVoWjJWeUxtTnNiM05sVFdWdWRTZ3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlMQ0F3S1R0Y2JpQWdJQ0I5WEc1Y2JseHVJQ0FnSUhCeWFYWmhkR1VnYzNSaGRHbGpJRzFsYm5WTFpYbHdjbVZ6YzB4cGMzUmxibVZ5S0dVZ09pQkxaWGxpYjJGeVpFVjJaVzUwS1NCN1hHNGdJQ0FnSUNBZ0lHbG1JQ2doVFdWdWRVMWhibUZuWlhJdWFYTlBjR1Z1S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBdkx5QkZjMk5oY0dWY2JpQWdJQ0FnSUNBZ2FXWWdLR1V1YTJWNVEyOWtaU0E5UFQwZ01qY3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lFMWxiblZOWVc1aFoyVnlMbU5zYjNObFRXVnVkU2dwTzF4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdMeThnVlhBZ1FYSnliM2RjYmlBZ0lDQWdJQ0FnYVdZZ0tHVXVhMlY1UTI5a1pTQTlQVDBnTXpncElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUUxbGJuVk5ZVzVoWjJWeUxtWnZZM1Z6UTI5MWJuUXRMVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lFMWxiblZOWVc1aFoyVnlMbVp2WTNWelRXVnVkU2dwTzF4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdMeThnUkc5M2JpQkJjbkp2ZDF4dUlDQWdJQ0FnSUNCcFppQW9aUzVyWlhsRGIyUmxJRDA5UFNBME1Da2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1RXVnVkVTFoYm1GblpYSXVabTlqZFhORGIzVnVkQ3NyTzF4dUlDQWdJQ0FnSUNBZ0lDQWdUV1Z1ZFUxaGJtRm5aWEl1Wm05amRYTk5aVzUxS0NrN1hHNGdJQ0FnSUNBZ0lIMWNibHh1WEc0Z0lDQWdJQ0FnSUM4dklFVnVkR1Z5SUdGdVpDQlRjR0ZqWldKaGNseHVJQ0FnSUNBZ0lDQnBaaUFvWlM1clpYbERiMlJsSUQwOVBTQXpNaUI4ZkNCbExtdGxlVU52WkdVZ1BUMDlJREV6S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JOWlc1MVRXRnVZV2RsY2k1amJHbGphMDFsYm5WSmRHVnRLQ2s3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1OVhHNGlYWDA9IiwiLyohIENvcHlyaWdodCAyMDE2IEF5b2dvIEhlYWx0aCBJbmMuICovXG5pbXBvcnQgeyBNZW51TWFuYWdlciB9IGZyb20gJy4vbWFuYWdlcic7XG5leHBvcnQgdmFyIE1lbnVCdXR0b25CZWhhdmlvdXIgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE1lbnVCdXR0b25CZWhhdmlvdXIoYnRuKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHRoaXMuZWwgPSBidG47XG4gICAgICAgIHZhciBtZW51SUQgPSB0aGlzLmVsLmdldEF0dHJpYnV0ZSgnbWVudScpO1xuICAgICAgICBpZiAoIW1lbnVJRCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciBtZW51ID0gYnRuLm93bmVyRG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobWVudUlEKTtcbiAgICAgICAgaWYgKCFtZW51KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5tZW51ID0gbWVudTtcbiAgICAgICAgdGhpcy5lbC5zZXRBdHRyaWJ1dGUoJ2FyaWEtaGFzcG9wdXAnLCAndHJ1ZScpO1xuICAgICAgICB0aGlzLmVsLnNldEF0dHJpYnV0ZSgnYXJpYS1leHBhbmRlZCcsICdmYWxzZScpO1xuICAgICAgICB0aGlzLmNsaWNrSGFuZGxlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIE1lbnVNYW5hZ2VyLnRvZ2dsZU1lbnUoX3RoaXMuZWwsIF90aGlzLm1lbnUpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLmtleUhhbmRsZXIgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgX3RoaXMuYnV0dG9uS2V5cHJlc3NMaXN0ZW5lcihlKTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5lbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuY2xpY2tIYW5kbGVyKTtcbiAgICAgICAgdGhpcy5lbC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5rZXlIYW5kbGVyKTtcbiAgICB9XG4gICAgTWVudUJ1dHRvbkJlaGF2aW91ci5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMuZWwpIHtcbiAgICAgICAgICAgIHRoaXMuZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmNsaWNrSGFuZGxlcik7XG4gICAgICAgICAgICB0aGlzLmVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLmtleUhhbmRsZXIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY2xpY2tIYW5kbGVyID0gbnVsbDtcbiAgICAgICAgdGhpcy5rZXlIYW5kbGVyID0gbnVsbDtcbiAgICAgICAgdGhpcy5tZW51ID0gbnVsbDtcbiAgICAgICAgdGhpcy5lbCA9IG51bGw7XG4gICAgfTtcbiAgICBNZW51QnV0dG9uQmVoYXZpb3VyLnByb3RvdHlwZS5idXR0b25LZXlwcmVzc0xpc3RlbmVyID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgaWYgKE1lbnVNYW5hZ2VyLm9wZW4gJiYgZS5rZXlDb2RlID09IDI3KSB7XG4gICAgICAgICAgICBNZW51TWFuYWdlci5jbG9zZU1lbnUoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZS5rZXlDb2RlID09IDQwKSB7XG4gICAgICAgICAgICBpZiAoIU1lbnVNYW5hZ2VyLm9wZW4pIHtcbiAgICAgICAgICAgICAgICBNZW51TWFuYWdlci5vcGVuTWVudSh0aGlzLmVsLCB0aGlzLm1lbnUsIHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgTWVudU1hbmFnZXIuZm9jdXNNZW51KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBNZW51QnV0dG9uQmVoYXZpb3VyO1xufSgpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVluVjBkRzl1TG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMaTR2YzNKakwySjFkSFJ2Ymk1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3gxUTBGQmRVTTdRVUZGZGtNc1QwRkJUeXhGUVVGRkxGZEJRVmNzUlVGQlJTeE5RVUZOTEZkQlFWY3NRMEZCUXp0QlFVVjRReXhOUVVGTk8wbEJUMFlzTmtKQlFWa3NSMEZCZFVJN1VVRkJia01zYVVKQk5FSkRPMUZCTTBKSExFbEJRVWtzUTBGQlF5eEZRVUZGTEVkQlFVY3NSMEZCUnl4RFFVRkRPMUZCUldRc1NVRkJTU3hOUVVGTkxFZEJRVWNzU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4WlFVRlpMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU03VVVGRE1VTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF5eERRVUZETzFsQlExWXNUVUZCVFN4RFFVRkRPMUZCUTFnc1EwRkJRenRSUVVWRUxFbEJRVWtzU1VGQlNTeEhRVUZITEVkQlFVY3NRMEZCUXl4aFFVRmhMRU5CUVVNc1kwRkJZeXhEUVVGRExFMUJRVTBzUTBGQmIwSXNRMEZCUXp0UlFVTjJSU3hGUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVNN1dVRkRVaXhOUVVGTkxFTkJRVU03VVVGRFdDeERRVUZETzFGQlJVUXNTVUZCU1N4RFFVRkRMRWxCUVVrc1IwRkJSeXhKUVVGSkxFTkJRVU03VVVGRmFrSXNTVUZCU1N4RFFVRkRMRVZCUVVVc1EwRkJReXhaUVVGWkxFTkJRVU1zWlVGQlpTeEZRVUZGTEUxQlFVMHNRMEZCUXl4RFFVRkRPMUZCUXpsRExFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNXVUZCV1N4RFFVRkRMR1ZCUVdVc1JVRkJSU3hQUVVGUExFTkJRVU1zUTBGQlF6dFJRVVV2UXl4SlFVRkpMRU5CUVVNc1dVRkJXU3hIUVVGSE8xbEJRMmhDTEZkQlFWY3NRMEZCUXl4VlFVRlZMRU5CUVVNc1MwRkJTU3hEUVVGRExFVkJRVWNzUlVGQlJTeExRVUZKTEVOQlFVTXNTVUZCU3l4RFFVRkRMRU5CUVVNN1VVRkRha1FzUTBGQlF5eERRVUZETzFGQlJVWXNTVUZCU1N4RFFVRkRMRlZCUVZVc1IwRkJSeXhWUVVGRExFTkJRV2xDTzFsQlEyaERMRXRCUVVrc1EwRkJReXh6UWtGQmMwSXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRSUVVOdVF5eERRVUZETEVOQlFVTTdVVUZGUml4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRExHZENRVUZuUWl4RFFVRkRMRTlCUVU4c1JVRkJSU3hKUVVGSkxFTkJRVU1zV1VGQllTeERRVUZETEVOQlFVTTdVVUZEZEVRc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eG5Ra0ZCWjBJc1EwRkJReXhUUVVGVExFVkJRVVVzU1VGQlNTeERRVUZETEZWQlFWY3NRMEZCUXl4RFFVRkRPMGxCUXpGRUxFTkJRVU03U1VGSlJDeHhRMEZCVHl4SFFVRlFPMUZCUTBrc1JVRkJSU3hEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVNN1dVRkRWaXhKUVVGSkxFTkJRVU1zUlVGQlJTeERRVUZETEcxQ1FVRnRRaXhEUVVGRExFOUJRVThzUlVGQlJTeEpRVUZKTEVOQlFVTXNXVUZCWVN4RFFVRkRMRU5CUVVNN1dVRkRla1FzU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4dFFrRkJiVUlzUTBGQlF5eFRRVUZUTEVWQlFVVXNTVUZCU1N4RFFVRkRMRlZCUVZjc1EwRkJReXhEUVVGRE8xRkJRemRFTEVOQlFVTTdVVUZGUkN4SlFVRkpMRU5CUVVNc1dVRkJXU3hIUVVGSExFbEJRVWtzUTBGQlF6dFJRVU42UWl4SlFVRkpMRU5CUVVNc1ZVRkJWU3hIUVVGSExFbEJRVWtzUTBGQlF6dFJRVU4yUWl4SlFVRkpMRU5CUVVNc1NVRkJTU3hIUVVGSExFbEJRVWtzUTBGQlF6dFJRVU5xUWl4SlFVRkpMRU5CUVVNc1JVRkJSU3hIUVVGSExFbEJRVWtzUTBGQlF6dEpRVU51UWl4RFFVRkRPMGxCUjA4c2IwUkJRWE5DTEVkQlFUbENMRlZCUVN0Q0xFTkJRV2xDTzFGQlJUVkRMRVZCUVVVc1EwRkJReXhEUVVGRExGZEJRVmNzUTBGQlF5eEpRVUZKTEVsQlFVa3NRMEZCUXl4RFFVRkRMRTlCUVU4c1NVRkJTU3hGUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZETzFsQlEzUkRMRmRCUVZjc1EwRkJReXhUUVVGVExFVkJRVVVzUTBGQlF6dFJRVU0xUWl4RFFVRkRPMUZCUjBRc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEU5QlFVOHNTVUZCU1N4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGRE8xbEJRMnhDTEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVNc1YwRkJWeXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVTTdaMEpCUTNCQ0xGZEJRVmNzUTBGQlF5eFJRVUZSTEVOQlFVTXNTVUZCU1N4RFFVRkRMRVZCUVVjc1JVRkJSU3hKUVVGSkxFTkJRVU1zU1VGQlN5eEZRVUZGTEVsQlFVa3NRMEZCUXl4RFFVRkRPMWxCUTNKRUxFTkJRVU03V1VGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0blFrRkRTaXhYUVVGWExFTkJRVU1zVTBGQlV5eEZRVUZGTEVOQlFVTTdXVUZETlVJc1EwRkJRenRSUVVOTUxFTkJRVU03U1VGRFRDeERRVUZETzBsQlEwd3NNRUpCUVVNN1FVRkJSQ3hEUVVGRExFRkJia1ZFTEVsQmJVVkRJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpTHlvaElFTnZjSGx5YVdkb2RDQXlNREUySUVGNWIyZHZJRWhsWVd4MGFDQkpibU11SUNvdlhHNWNibWx0Y0c5eWRDQjdJRTFsYm5WTllXNWhaMlZ5SUgwZ1puSnZiU0FuTGk5dFlXNWhaMlZ5Snp0Y2JseHVaWGh3YjNKMElHTnNZWE56SUUxbGJuVkNkWFIwYjI1Q1pXaGhkbWx2ZFhJZ2UxeHVJQ0FnSUhCeWFYWmhkR1VnWld3NklHNTFiR3dnZkNCSVZFMU1RblYwZEc5dVJXeGxiV1Z1ZER0Y2JpQWdJQ0J3Y21sMllYUmxJRzFsYm5VZ09pQnVkV3hzSUh3Z1NGUk5URTFsYm5WRmJHVnRaVzUwTzF4dVhHNGdJQ0FnY0hKcGRtRjBaU0JqYkdsamEwaGhibVJzWlhJZ09pQnVkV3hzSUh3Z0tDZ3BJRDArSUhadmFXUXBPMXh1SUNBZ0lIQnlhWFpoZEdVZ2EyVjVTR0Z1Wkd4bGNpQTZJRzUxYkd3Z2ZDQW9LR1VnT2lCTFpYbGliMkZ5WkVWMlpXNTBLU0E5UGlCMmIybGtLVHRjYmx4dUlDQWdJR052Ym5OMGNuVmpkRzl5S0dKMGJpQTZJRWhVVFV4Q2RYUjBiMjVGYkdWdFpXNTBLU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVaV3dnUFNCaWRHNDdYRzVjYmlBZ0lDQWdJQ0FnYkdWMElHMWxiblZKUkNBOUlIUm9hWE11Wld3dVoyVjBRWFIwY21saWRYUmxLQ2R0Wlc1MUp5azdYRzRnSUNBZ0lDQWdJR2xtSUNnaGJXVnVkVWxFS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCc1pYUWdiV1Z1ZFNBOUlHSjBiaTV2ZDI1bGNrUnZZM1Z0Wlc1MExtZGxkRVZzWlcxbGJuUkNlVWxrS0cxbGJuVkpSQ2tnWVhNZ1NGUk5URTFsYm5WRmJHVnRaVzUwTzF4dUlDQWdJQ0FnSUNCcFppQW9JVzFsYm5VcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lIUm9hWE11YldWdWRTQTlJRzFsYm5VN1hHNWNiaUFnSUNBZ0lDQWdkR2hwY3k1bGJDNXpaWFJCZEhSeWFXSjFkR1VvSjJGeWFXRXRhR0Z6Y0c5d2RYQW5MQ0FuZEhKMVpTY3BPMXh1SUNBZ0lDQWdJQ0IwYUdsekxtVnNMbk5sZEVGMGRISnBZblYwWlNnbllYSnBZUzFsZUhCaGJtUmxaQ2NzSUNkbVlXeHpaU2NwTzF4dVhHNGdJQ0FnSUNBZ0lIUm9hWE11WTJ4cFkydElZVzVrYkdWeUlEMGdLQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnVFdWdWRVMWhibUZuWlhJdWRHOW5aMnhsVFdWdWRTaDBhR2x6TG1Wc0lTd2dkR2hwY3k1dFpXNTFJU2s3WEc0Z0lDQWdJQ0FnSUgwN1hHNWNiaUFnSUNBZ0lDQWdkR2hwY3k1clpYbElZVzVrYkdWeUlEMGdLR1VnT2lCTFpYbGliMkZ5WkVWMlpXNTBLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtSjFkSFJ2Ymt0bGVYQnlaWE56VEdsemRHVnVaWElvWlNrN1hHNGdJQ0FnSUNBZ0lIMDdYRzVjYmlBZ0lDQWdJQ0FnZEdocGN5NWxiQzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ2RqYkdsamF5Y3NJSFJvYVhNdVkyeHBZMnRJWVc1a2JHVnlJU2s3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVaV3d1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWduYTJWNVpHOTNiaWNzSUhSb2FYTXVhMlY1U0dGdVpHeGxjaUVwTzF4dUlDQWdJSDFjYmx4dVhHNGdJQ0FnTHk4Z1EyeGxZVzUxY0NCbWRXNWpkR2x2Ymx4dUlDQWdJR1JsYzNSeWIza29LU0I3WEc0Z0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1Wc0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVZzTG5KbGJXOTJaVVYyWlc1MFRHbHpkR1Z1WlhJb0oyTnNhV05ySnl3Z2RHaHBjeTVqYkdsamEwaGhibVJzWlhJaEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVaV3d1Y21WdGIzWmxSWFpsYm5STWFYTjBaVzVsY2lnbmEyVjVaRzkzYmljc0lIUm9hWE11YTJWNVNHRnVaR3hsY2lFcE8xeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnZEdocGN5NWpiR2xqYTBoaGJtUnNaWElnUFNCdWRXeHNPMXh1SUNBZ0lDQWdJQ0IwYUdsekxtdGxlVWhoYm1Sc1pYSWdQU0J1ZFd4c08xeHVJQ0FnSUNBZ0lDQjBhR2x6TG0xbGJuVWdQU0J1ZFd4c08xeHVJQ0FnSUNBZ0lDQjBhR2x6TG1Wc0lEMGdiblZzYkR0Y2JpQWdJQ0I5WEc1Y2JseHVJQ0FnSUhCeWFYWmhkR1VnWW5WMGRHOXVTMlY1Y0hKbGMzTk1hWE4wWlc1bGNpaGxJRG9nUzJWNVltOWhjbVJGZG1WdWRDa2dlMXh1SUNBZ0lDQWdJQ0F2THlCRmMyTmhjR1ZjYmlBZ0lDQWdJQ0FnYVdZZ0tFMWxiblZOWVc1aFoyVnlMbTl3Wlc0Z0ppWWdaUzVyWlhsRGIyUmxJRDA5SURJM0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCTlpXNTFUV0Z1WVdkbGNpNWpiRzl6WlUxbGJuVW9LVHRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDOHZJRVJQVjA0Z1FWSlNUMWRjYmlBZ0lDQWdJQ0FnYVdZZ0tHVXVhMlY1UTI5a1pTQTlQU0EwTUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDRk5aVzUxVFdGdVlXZGxjaTV2Y0dWdUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdUV1Z1ZFUxaGJtRm5aWEl1YjNCbGJrMWxiblVvZEdocGN5NWxiQ0VzSUhSb2FYTXViV1Z1ZFNFc0lIUnlkV1VwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQk5aVzUxVFdGdVlXZGxjaTVtYjJOMWMwMWxiblVvS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYm4xY2JpSmRmUT09IiwiLyohIENvcHlyaWdodCAyMDE2IEF5b2dvIEhlYWx0aCBJbmMuICovXG5pbXBvcnQgeyBNZW51QnV0dG9uQmVoYXZpb3VyIH0gZnJvbSAnLi9idXR0b24nO1xudmFyIE1FTlVfU1RZTEVTID0gXCJcXG5tZW51W3R5cGU9XFxcImNvbnRleHRcXFwiXSxcXG5tZW51W2RhdGEtb3duZXI9XFxcImJ1dHRvblxcXCJdIHtcXG4gICAgZGlzcGxheTogbm9uZTtcXG4gICAgcGFkZGluZzogMDtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBib3JkZXI6IDFweCBzb2xpZDtcXG4gICAgd2lsbC1jaGFuZ2U6IHRyYW5zZm9ybTtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZVkoMCk7XFxuICAgIHRyYW5zZm9ybS1vcmlnaW46IHRvcCBjZW50ZXI7XFxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAyMjVtcyBjdWJpYy1iZXppZXIoMC40LCAwLjAsIDAuMiwgMSk7XFxufVxcblxcbm1lbnVpdGVtIHtcXG4gICAgZGlzcGxheTogbGlzdC1pdGVtO1xcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XFxuICAgIGJhY2tncm91bmQ6IE1lbnU7XFxuICAgIGZvbnQ6IG1lbnU7XFxuICAgIHBhZGRpbmc6IDAuMjVlbSAwLjVlbTtcXG4gICAgY3Vyc29yOiBkZWZhdWx0O1xcbn1cXG5cXG5tZW51aXRlbTo6YWZ0ZXIge1xcbiAgICBjb250ZW50OiBhdHRyKGxhYmVsKTtcXG59XFxuXFxubWVudWl0ZW1bZGlzYWJsZWRdIHtcXG4gICAgY29sb3I6IEdyYXlUZXh0O1xcbn1cXG5cXG5tZW51aXRlbTpub3QoW2Rpc2FibGVkXSk6aG92ZXIsXFxubWVudWl0ZW06bm90KFtkaXNhYmxlZF0pOmZvY3VzIHtcXG4gICAgYmFja2dyb3VuZDogSGlnaGxpZ2h0O1xcbiAgICBjb2xvcjogSGlnaGxpZ2h0VGV4dDtcXG59XFxuXFxuYnV0dG9uW3R5cGU9XFxcIm1lbnVcXFwiXTo6YWZ0ZXIsXFxuYnV0dG9uW2RhdGEtdHlwZT1cXFwibWVudVxcXCJdOmFmdGVyIHsgY29udGVudDogJyBcXHUyNUJFJzsgfVxcblxcbmJ1dHRvblt0eXBlPVxcXCJtZW51XFxcIl06ZW1wdHk6OmFmdGVyLFxcbmJ1dHRvbltkYXRhLXR5cGU9XFxcIm1lbnVcXFwiXTplbXB0eTphZnRlciB7IGNvbnRlbnQ6ICdcXHUyNUJFJzsgfSAvKiBObyBzcGFjZSBjaGFyYWN0ZXIgKi9cXG5cIjtcbnZhciBQUkVGSVhfU1RZTEVTID0gXCJcXG5tZW51W3R5cGU9XFxcImNvbnRleHRcXFwiXSxcXG5tZW51W2RhdGEtb3duZXI9XFxcImJ1dHRvblxcXCJdIHtcXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlWSgwKTtcXG4gICAgLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOiB0b3AgY2VudGVyO1xcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDIyNW1zIGN1YmljLWJlemllcigwLjQsIDAuMCwgMC4yLCAxKTtcXG4gICAgdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gMjI1bXMgY3ViaWMtYmV6aWVyKDAuNCwgMC4wLCAwLjIsIDEpO1xcbn1cXG5cIjtcbnZhciBtbnVTdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG5tbnVTdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShNRU5VX1NUWUxFUykpO1xuaWYgKCEoJ3RyYW5zZm9ybScgaW4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jykuc3R5bGUpKSB7XG4gICAgbW51U3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoUFJFRklYX1NUWUxFUykpO1xufVxudmFyIGluc2VydFBvaW50O1xuaWYgKGluc2VydFBvaW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignbGluaycpKSB7XG4gICAgaW5zZXJ0UG9pbnQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobW51U3R5bGUsIGluc2VydFBvaW50KTtcbn1cbmVsc2UgaWYgKGluc2VydFBvaW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcignc3R5bGUnKSkge1xuICAgIGluc2VydFBvaW50LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG1udVN0eWxlLCBpbnNlcnRQb2ludCk7XG59XG5lbHNlIGlmIChpbnNlcnRQb2ludCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2hlYWQnKSkge1xuICAgIGluc2VydFBvaW50LmFwcGVuZENoaWxkKG1udVN0eWxlKTtcbn1cbmVsc2Uge1xuICAgIGRvY3VtZW50LmFwcGVuZENoaWxkKG1udVN0eWxlKTtcbn1cbnZhciBnY0NhY2hlID0gbnVsbDtcbmlmICgnV2Vha01hcCcgaW4gd2luZG93KSB7XG4gICAgZ2NDYWNoZSA9IG5ldyBXZWFrTWFwKCk7XG59XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNZW51QnV0dG9uKGVsKSB7XG4gICAgdmFyIGJlaGF2aW91ciA9IG5ldyBNZW51QnV0dG9uQmVoYXZpb3VyKGVsKTtcbiAgICBpZiAoZ2NDYWNoZSkge1xuICAgICAgICBnY0NhY2hlLnNldChlbCwgYmVoYXZpb3VyKTtcbiAgICB9XG4gICAgcmV0dXJuIGJlaGF2aW91cjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWFXNWtaWGd1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTl6Y21NdmFXNWtaWGd1ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNkVU5CUVhWRE8wRkJSM1pETEU5QlFVOHNSVUZCUlN4dFFrRkJiVUlzUlVGQlJTeE5RVUZOTEZWQlFWVXNRMEZCUXp0QlFVVXZReXhKUVVGTkxGZEJRVmNzUjBGQlJ5eHhORUpCZVVOdVFpeERRVUZETzBGQlIwWXNTVUZCVFN4aFFVRmhMRWRCUVVjc2RWTkJVWEpDTEVOQlFVRTdRVUZMUkN4SlFVRkpMRkZCUVZFc1IwRkJSeXhSUVVGUkxFTkJRVU1zWVVGQllTeERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRPMEZCUXk5RExGRkJRVkVzUTBGQlF5eFhRVUZYTEVOQlFVTXNVVUZCVVN4RFFVRkRMR05CUVdNc1EwRkJReXhYUVVGWExFTkJRVU1zUTBGQlF5eERRVUZETzBGQlJ6TkVMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eFhRVUZYTEVsQlFVa3NVVUZCVVN4RFFVRkRMR0ZCUVdFc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1NVRkRlRVFzVVVGQlVTeERRVUZETEZkQlFWY3NRMEZCUXl4UlFVRlJMRU5CUVVNc1kwRkJZeXhEUVVGRExHRkJRV0VzUTBGQlF5eERRVUZETEVOQlFVTTdRVUZEYWtVc1EwRkJRenRCUVVkRUxFbEJRVWtzVjBGQlowTXNRMEZCUXp0QlFVTnlReXhGUVVGRkxFTkJRVU1zUTBGQlF5eFhRVUZYTEVkQlFVY3NVVUZCVVN4RFFVRkRMR0ZCUVdFc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdTVUZETDBNc1YwRkJWeXhEUVVGRExGVkJRVlVzUTBGQlF5eFpRVUZaTEVOQlFVTXNVVUZCVVN4RlFVRkZMRmRCUVZjc1EwRkJReXhEUVVGRE8wRkJReTlFTEVOQlFVTTdRVUZCUXl4SlFVRkpMRU5CUTA0c1JVRkJSU3hEUVVGRExFTkJRVU1zVjBGQlZ5eEhRVUZITEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzBsQlEyaEVMRmRCUVZjc1EwRkJReXhWUVVGVkxFTkJRVU1zV1VGQldTeERRVUZETEZGQlFWRXNSVUZCUlN4WFFVRlhMRU5CUVVNc1EwRkJRenRCUVVNdlJDeERRVUZETzBGQlFVTXNTVUZCU1N4RFFVTk9MRVZCUVVVc1EwRkJReXhEUVVGRExGZEJRVmNzUjBGQlJ5eFJRVUZSTEVOQlFVTXNZVUZCWVN4RFFVRkRMRTFCUVUwc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dEpRVU12UXl4WFFVRlhMRU5CUVVNc1YwRkJWeXhEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZETzBGQlEzUkRMRU5CUVVNN1FVRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF6dEpRVU5LTEZGQlFWRXNRMEZCUXl4WFFVRlhMRU5CUVVNc1VVRkJVU3hEUVVGRExFTkJRVU03UVVGRGJrTXNRMEZCUXp0QlFVZEVMRWxCUVVrc1QwRkJUeXhIUVVFMFJDeEpRVUZKTEVOQlFVTTdRVUZETlVVc1JVRkJSU3hEUVVGRExFTkJRVU1zVTBGQlV5eEpRVUZKTEUxQlFVMHNRMEZCUXl4RFFVRkRMRU5CUVVNN1NVRkRkRUlzVDBGQlR5eEhRVUZITEVsQlFVa3NUMEZCVHl4RlFVRkZMRU5CUVVNN1FVRkROVUlzUTBGQlF6dEJRVWRFTEUxQlFVMHNRMEZCUXl4UFFVRlBMSEZDUVVGeFFpeEZRVUZ6UWp0SlFVTnlSQ3hKUVVGSkxGTkJRVk1zUjBGQlJ5eEpRVUZKTEcxQ1FVRnRRaXhEUVVGRExFVkJRVVVzUTBGQlF5eERRVUZETzBsQlJUVkRMRVZCUVVVc1EwRkJReXhEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETEVOQlFVTTdVVUZEVml4UFFVRlBMRU5CUVVNc1IwRkJSeXhEUVVGRExFVkJRVVVzUlVGQlJTeFRRVUZUTEVOQlFVTXNRMEZCUXp0SlFVTXZRaXhEUVVGRE8wbEJSVVFzVFVGQlRTeERRVUZETEZOQlFWTXNRMEZCUXp0QlFVTnlRaXhEUVVGRElpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lMeW9oSUVOdmNIbHlhV2RvZENBeU1ERTJJRUY1YjJkdklFaGxZV3gwYUNCSmJtTXVJQ292WEc1Y2JseHVhVzF3YjNKMElIc2dUV1Z1ZFVKMWRIUnZia0psYUdGMmFXOTFjaUI5SUdaeWIyMGdKeTR2WW5WMGRHOXVKenRjYmx4dVkyOXVjM1FnVFVWT1ZWOVRWRmxNUlZNZ1BTQmdYRzV0Wlc1MVczUjVjR1U5WENKamIyNTBaWGgwWENKZExGeHViV1Z1ZFZ0a1lYUmhMVzkzYm1WeVBWd2lZblYwZEc5dVhDSmRJSHRjYmlBZ0lDQmthWE53YkdGNU9pQnViMjVsTzF4dUlDQWdJSEJoWkdScGJtYzZJREE3WEc0Z0lDQWdiV0Z5WjJsdU9pQXdPMXh1SUNBZ0lHSnZjbVJsY2pvZ01YQjRJSE52Ykdsa08xeHVJQ0FnSUhkcGJHd3RZMmhoYm1kbE9pQjBjbUZ1YzJadmNtMDdYRzRnSUNBZ2RISmhibk5tYjNKdE9pQnpZMkZzWlZrb01DazdYRzRnSUNBZ2RISmhibk5tYjNKdExXOXlhV2RwYmpvZ2RHOXdJR05sYm5SbGNqdGNiaUFnSUNCMGNtRnVjMmwwYVc5dU9pQjBjbUZ1YzJadmNtMGdNakkxYlhNZ1kzVmlhV010WW1WNmFXVnlLREF1TkN3Z01DNHdMQ0F3TGpJc0lERXBPMXh1ZlZ4dVhHNXRaVzUxYVhSbGJTQjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ2JHbHpkQzFwZEdWdE8xeHVJQ0FnSUd4cGMzUXRjM1I1YkdVdGRIbHdaVG9nYm05dVpUdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQk5aVzUxTzF4dUlDQWdJR1p2Ym5RNklHMWxiblU3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNQzR5TldWdElEQXVOV1Z0TzF4dUlDQWdJR04xY25OdmNqb2daR1ZtWVhWc2REdGNibjFjYmx4dWJXVnVkV2wwWlcwNk9tRm1kR1Z5SUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJoZEhSeUtHeGhZbVZzS1R0Y2JuMWNibHh1YldWdWRXbDBaVzFiWkdsellXSnNaV1JkSUh0Y2JpQWdJQ0JqYjJ4dmNqb2dSM0poZVZSbGVIUTdYRzU5WEc1Y2JtMWxiblZwZEdWdE9tNXZkQ2hiWkdsellXSnNaV1JkS1Rwb2IzWmxjaXhjYm0xbGJuVnBkR1Z0T201dmRDaGJaR2x6WVdKc1pXUmRLVHBtYjJOMWN5QjdYRzRnSUNBZ1ltRmphMmR5YjNWdVpEb2dTR2xuYUd4cFoyaDBPMXh1SUNBZ0lHTnZiRzl5T2lCSWFXZG9iR2xuYUhSVVpYaDBPMXh1ZlZ4dVhHNWlkWFIwYjI1YmRIbHdaVDFjSW0xbGJuVmNJbDA2T21GbWRHVnlMRnh1WW5WMGRHOXVXMlJoZEdFdGRIbHdaVDFjSW0xbGJuVmNJbDA2WVdaMFpYSWdleUJqYjI1MFpXNTBPaUFuSU9LV3ZpYzdJSDFjYmx4dVluVjBkRzl1VzNSNWNHVTlYQ0p0Wlc1MVhDSmRPbVZ0Y0hSNU9qcGhablJsY2l4Y2JtSjFkSFJ2Ymx0a1lYUmhMWFI1Y0dVOVhDSnRaVzUxWENKZE9tVnRjSFI1T21GbWRHVnlJSHNnWTI5dWRHVnVkRG9nSitLV3ZpYzdJSDBnTHlvZ1RtOGdjM0JoWTJVZ1kyaGhjbUZqZEdWeUlDb3ZYRzVnTzF4dVhHNWNibU52Ym5OMElGQlNSVVpKV0Y5VFZGbE1SVk1nUFNCZ1hHNXRaVzUxVzNSNWNHVTlYQ0pqYjI1MFpYaDBYQ0pkTEZ4dWJXVnVkVnRrWVhSaExXOTNibVZ5UFZ3aVluVjBkRzl1WENKZElIdGNiaUFnSUNBdGQyVmlhMmwwTFhSeVlXNXpabTl5YlRvZ2MyTmhiR1ZaS0RBcE8xeHVJQ0FnSUMxM1pXSnJhWFF0ZEhKaGJuTm1iM0p0TFc5eWFXZHBiam9nZEc5d0lHTmxiblJsY2p0Y2JpQWdJQ0F0ZDJWaWEybDBMWFJ5WVc1emFYUnBiMjQ2SUMxM1pXSnJhWFF0ZEhKaGJuTm1iM0p0SURJeU5XMXpJR04xWW1sakxXSmxlbWxsY2lnd0xqUXNJREF1TUN3Z01DNHlMQ0F4S1R0Y2JpQWdJQ0IwY21GdWMybDBhVzl1T2lBdGQyVmlhMmwwTFhSeVlXNXpabTl5YlNBeU1qVnRjeUJqZFdKcFl5MWlaWHBwWlhJb01DNDBMQ0F3TGpBc0lEQXVNaXdnTVNrN1hHNTlYRzVnWEc1Y2JseHVMeThnU1c1cVpXTjBJR1JsWm1GMWJIUWdjM1I1YkdsdVoxeHVYRzVzWlhRZ2JXNTFVM1I1YkdVZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwS0NkemRIbHNaU2NwTzF4dWJXNTFVM1I1YkdVdVlYQndaVzVrUTJocGJHUW9aRzlqZFcxbGJuUXVZM0psWVhSbFZHVjRkRTV2WkdVb1RVVk9WVjlUVkZsTVJWTXBLVHRjYmx4dUx5OGdRV1JrSUc5c1pDQndjbVZtYVhobFpDQnpkSGxzWlhNZ1ptOXlJRzlzWkdWeUlHbFBVeUJoYm1RZ1FXNWtjbTlwWkNCa1pYWnBZMlZ6WEc1cFppQW9JU2duZEhKaGJuTm1iM0p0SnlCcGJpQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwS0Nka2FYWW5LUzV6ZEhsc1pTa3BJSHRjYmlBZ0lDQnRiblZUZEhsc1pTNWhjSEJsYm1SRGFHbHNaQ2hrYjJOMWJXVnVkQzVqY21WaGRHVlVaWGgwVG05a1pTaFFVa1ZHU1ZoZlUxUlpURVZUS1NrN1hHNTlYRzVjYmx4dWJHVjBJR2x1YzJWeWRGQnZhVzUwSURvZ1NGUk5URVZzWlcxbGJuUWdmQ0J1ZFd4c08xeHVhV1lnS0dsdWMyVnlkRkJ2YVc1MElEMGdaRzlqZFcxbGJuUXVjWFZsY25sVFpXeGxZM1J2Y2lnbmJHbHVheWNwS1NCN1hHNGdJQ0FnYVc1elpYSjBVRzlwYm5RdWNHRnlaVzUwVG05a1pTNXBibk5sY25SQ1pXWnZjbVVvYlc1MVUzUjViR1VzSUdsdWMyVnlkRkJ2YVc1MEtUdGNibjBnWld4elpWeHVhV1lnS0dsdWMyVnlkRkJ2YVc1MElEMGdaRzlqZFcxbGJuUXVjWFZsY25sVFpXeGxZM1J2Y2lnbmMzUjViR1VuS1NrZ2UxeHVJQ0FnSUdsdWMyVnlkRkJ2YVc1MExuQmhjbVZ1ZEU1dlpHVXVhVzV6WlhKMFFtVm1iM0psS0cxdWRWTjBlV3hsTENCcGJuTmxjblJRYjJsdWRDazdYRzU5SUdWc2MyVmNibWxtSUNocGJuTmxjblJRYjJsdWRDQTlJR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNJb0oyaGxZV1FuS1NrZ2UxeHVJQ0FnSUdsdWMyVnlkRkJ2YVc1MExtRndjR1Z1WkVOb2FXeGtLRzF1ZFZOMGVXeGxLVHRjYm4wZ1pXeHpaU0I3WEc0Z0lDQWdaRzlqZFcxbGJuUXVZWEJ3Wlc1a1EyaHBiR1FvYlc1MVUzUjViR1VwTzF4dWZWeHVYRzVjYm14bGRDQm5ZME5oWTJobElEb2dWMlZoYTAxaGNEeElWRTFNUW5WMGRHOXVSV3hsYldWdWRDd2dUV1Z1ZFVKMWRIUnZia0psYUdGMmFXOTFjajRnZkNCdWRXeHNJRDBnYm5Wc2JEdGNibWxtSUNnblYyVmhhMDFoY0NjZ2FXNGdkMmx1Wkc5M0tTQjdYRzRnSUNBZ1oyTkRZV05vWlNBOUlHNWxkeUJYWldGclRXRndLQ2s3WEc1OVhHNWNibHh1Wlhod2IzSjBJR1JsWm1GMWJIUWdablZ1WTNScGIyNGdUV1Z1ZFVKMWRIUnZiaWhsYkNBNklFaFVUVXhDZFhSMGIyNUZiR1Z0Wlc1MEtTQjdYRzRnSUNBZ2JHVjBJR0psYUdGMmFXOTFjaUE5SUc1bGR5Qk5aVzUxUW5WMGRHOXVRbVZvWVhacGIzVnlLR1ZzS1R0Y2JseHVJQ0FnSUdsbUlDaG5ZME5oWTJobEtTQjdYRzRnSUNBZ0lDQWdJR2RqUTJGamFHVXVjMlYwS0dWc0xDQmlaV2hoZG1sdmRYSXBPMXh1SUNBZ0lIMWNibHh1SUNBZ0lISmxkSFZ5YmlCaVpXaGhkbWx2ZFhJN1hHNTlYRzRpWFgwPSIsIi8qISBDb3B5cmlnaHQgMjAxNiBBeW9nbyBIZWFsdGggSW5jLiAqL1xuaW1wb3J0ICogYXMgYW5ndWxhciBmcm9tICdhbmd1bGFyJztcbmltcG9ydCBNZW51QnV0dG9uIGZyb20gJy4vaW5kZXgnO1xudmFyIG1vZE5hbWUgPSAnYXlNZW51QnV0dG9uJztcbmFuZ3VsYXIubW9kdWxlKG1vZE5hbWUpXG4gICAgLmRpcmVjdGl2ZSgnYnV0dG9uJywgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHJlc3RyaWN0OiAnRScsXG4gICAgICAgIGxpbms6IGZ1bmN0aW9uIChfJHNjb3BlLCAkZWxlbWVudCkge1xuICAgICAgICAgICAgdmFyIGVsID0gJGVsZW1lbnRbMF07XG4gICAgICAgICAgICBpZiAoZWwuZ2V0QXR0cmlidXRlKCd0eXBlJykgPT09ICdtZW51JyB8fCBlbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtdHlwZScpID09PSAnbWVudScpIHtcbiAgICAgICAgICAgICAgICB2YXIgYmVoYXZpb3VyXzEgPSBNZW51QnV0dG9uKGVsKTtcbiAgICAgICAgICAgICAgICAkZWxlbWVudC5vbignJGRlc3Ryb3knLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGJlaGF2aW91cl8xLmRlc3Ryb3koKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG59KTtcbmV4cG9ydCBkZWZhdWx0IG1vZE5hbWU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lZVzVuZFd4aGNqRXVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOXpjbU12WVc1bmRXeGhjakV1ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNkVU5CUVhWRE8wRkJSWFpETEU5QlFVOHNTMEZCU3l4UFFVRlBMRTFCUVUwc1UwRkJVeXhEUVVGRE8wRkJRMjVETEU5QlFVOHNWVUZCVlN4TlFVRk5MRk5CUVZNc1EwRkJRenRCUVVWcVF5eEpRVUZOTEU5QlFVOHNSMEZCUnl4alFVRmpMRU5CUVVNN1FVRkZMMElzVDBGQlR5eERRVUZETEUxQlFVMHNRMEZCUXl4UFFVRlBMRU5CUVVNN1MwRkRkRUlzVTBGQlV5eERRVUZETEZGQlFWRXNSVUZCUlR0SlFVTnFRaXhOUVVGTkxFTkJRVU03VVVGRFNDeFJRVUZSTEVWQlFVVXNSMEZCUnp0UlFVTmlMRWxCUVVrc1JVRkJSU3hWUVVGVExFOUJRVThzUlVGQlJTeFJRVUZSTzFsQlF6VkNMRWxCUVVrc1JVRkJSU3hIUVVGSExGRkJRVkVzUTBGQlF5eERRVUZETEVOQlFYTkNMRU5CUVVNN1dVRkZNVU1zUlVGQlJTeERRVUZETEVOQlFVTXNSVUZCUlN4RFFVRkRMRmxCUVZrc1EwRkJReXhOUVVGTkxFTkJRVU1zUzBGQlN5eE5RVUZOTEVsQlFVa3NSVUZCUlN4RFFVRkRMRmxCUVZrc1EwRkJReXhYUVVGWExFTkJRVU1zUzBGQlN5eE5RVUZOTEVOQlFVTXNRMEZCUXl4RFFVRkRPMmRDUVVOb1JpeEpRVUZKTEZkQlFWTXNSMEZCUnl4VlFVRlZMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU03WjBKQlJTOUNMRkZCUVZFc1EwRkJReXhGUVVGRkxFTkJRVU1zVlVGQlZTeEZRVUZGTzI5Q1FVTndRaXhYUVVGVExFTkJRVU1zVDBGQlR5eEZRVUZGTEVOQlFVTTdaMEpCUTNoQ0xFTkJRVU1zUTBGQlF5eERRVUZETzFsQlExQXNRMEZCUXp0UlFVTk1MRU5CUVVNN1MwRkRTaXhEUVVGRE8wRkJRMDRzUTBGQlF5eERRVUZETEVOQlFVTTdRVUZGU0N4bFFVRmxMRTlCUVU4c1EwRkJReUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWk4cUlTQkRiM0I1Y21sbmFIUWdNakF4TmlCQmVXOW5ieUJJWldGc2RHZ2dTVzVqTGlBcUwxeHVYRzVwYlhCdmNuUWdLaUJoY3lCaGJtZDFiR0Z5SUdaeWIyMGdKMkZ1WjNWc1lYSW5PMXh1YVcxd2IzSjBJRTFsYm5WQ2RYUjBiMjRnWm5KdmJTQW5MaTlwYm1SbGVDYzdYRzVjYm1OdmJuTjBJRzF2WkU1aGJXVWdQU0FuWVhsTlpXNTFRblYwZEc5dUp6dGNibHh1WVc1bmRXeGhjaTV0YjJSMWJHVW9iVzlrVG1GdFpTbGNiaTVrYVhKbFkzUnBkbVVvSjJKMWRIUnZiaWNzSUdaMWJtTjBhVzl1S0NrZ2UxeHVJQ0FnSUhKbGRIVnliaUI3WEc0Z0lDQWdJQ0FnSUhKbGMzUnlhV04wT2lBblJTY3NYRzRnSUNBZ0lDQWdJR3hwYm1zNklHWjFibU4wYVc5dUtGOGtjMk52Y0dVc0lDUmxiR1Z0Wlc1MEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaV3dnUFNBa1pXeGxiV1Z1ZEZzd1hTQmhjeUJJVkUxTVFuVjBkRzl1Uld4bGJXVnVkRHRjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dWc0xtZGxkRUYwZEhKcFluVjBaU2duZEhsd1pTY3BJRDA5UFNBbmJXVnVkU2NnZkh3Z1pXd3VaMlYwUVhSMGNtbGlkWFJsS0Nka1lYUmhMWFI1Y0dVbktTQTlQVDBnSjIxbGJuVW5LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHSmxhR0YyYVc5MWNpQTlJRTFsYm5WQ2RYUjBiMjRvWld3cE8xeHVYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKR1ZzWlcxbGJuUXViMjRvSnlSa1pYTjBjbTk1Snl3Z0tDa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmlaV2hoZG1sdmRYSXVaR1Z6ZEhKdmVTZ3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVHRjYm4wcE8xeHVYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQnRiMlJPWVcxbE8xeHVJbDE5Il0sIm5hbWVzIjpbImFuZ3VsYXIubW9kdWxlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBLEFBQU8sSUFBSSxXQUFXLEdBQUcsQ0FBQyxZQUFZO0lBQ2xDLFNBQVMsV0FBVyxHQUFHO0tBQ3RCO0lBQ0QsTUFBTSxDQUFDLGNBQWMsQ0FBQyxXQUFXLEVBQUUsTUFBTSxFQUFFO1FBQ3ZDLEdBQUcsRUFBRSxZQUFZO1lBQ2IsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO1NBQ3RCO1FBQ0QsVUFBVSxFQUFFLElBQUk7UUFDaEIsWUFBWSxFQUFFLElBQUk7S0FDckIsQ0FBQyxDQUFDO0lBQ0gsV0FBVyxDQUFDLFFBQVEsR0FBRyxVQUFVLEdBQUcsRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFO1FBQzlDLElBQUksS0FBSyxLQUFLLEtBQUssQ0FBQyxFQUFFLEVBQUUsS0FBSyxH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
